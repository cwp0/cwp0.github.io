<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测开面经</title>
      <link href="/posts/17768.html"/>
      <url>/posts/17768.html</url>
      
        <content type="html"><![CDATA[<p>this is a test file.</p>]]></content>
      
      
      <categories>
          
          <category> 测试开发 </category>
          
          <category> 面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面经 </tag>
            
            <tag> 测试开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端&amp;移动端面经</title>
      <link href="/posts/17767.html"/>
      <url>/posts/17767.html</url>
      
        <content type="html"><![CDATA[<p>this is a test file.</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 移动端 </category>
          
          <category> 面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面经 </tag>
            
            <tag> 移动端 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java后端面经</title>
      <link href="/posts/17766.html"/>
      <url>/posts/17766.html</url>
      
        <content type="html"><![CDATA[<p>this is a test file.</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 面经 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RNN/LSTM/GRU/GCN</title>
      <link href="/posts/17765.html"/>
      <url>/posts/17765.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近对强化学习算法和预测结合有些想法，阅读了下面两篇文章对之有了大致认识。</p></blockquote><blockquote><p>参考：<a href="https://zhuanlan.zhihu.com/p/587276701">https://zhuanlan.zhihu.com/p/587276701</a><br>参考：<a href="https://zhuanlan.zhihu.com/p/605750441">https://zhuanlan.zhihu.com/p/605750441</a></p></blockquote><h2 id="循环神经网络RNN"><a href="#循环神经网络RNN" class="headerlink" title="循环神经网络RNN"></a>循环神经网络RNN</h2><p>传统的神经网络只能单独的取处理一个个的输入，前一个输入和后一个输入是完全没有关系的。但是，某些任务需要能够更好的处理序列的信息，即前面的输入和后面的输入是有关系的。</p><p>由此诞生了RNN。</p><p>循环神经网络（Recurrent Neural Network, RNN）是一类以序列（sequence）数据为输入，在序列的演进方向进行递归（recursion）且所有节点（循环单元）按链式连接的递归神经网络。</p><p><img src="/../image/RNN-LSTM-GRU-GCN/img_1.png" alt="img_1.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x 输入层 向量</span><br><span class="line">U 输入层到隐藏层的 权重矩阵</span><br><span class="line">s 隐藏层 向量</span><br><span class="line">V 隐藏层到输出层的 权重矩阵</span><br><span class="line">o 输出层 向量</span><br><span class="line">W 上一次隐藏层的值作为这一次输入的权重 权重矩阵</span><br></pre></td></tr></table></figure><p>循环神经网络的隐藏层的值s不仅取决于当前这次的输入x，还取决于上一次隐藏层的值s。</p><p><img src="/../image/RNN-LSTM-GRU-GCN/img_2.png" alt="img_2.png"></p><p>具体的抽象图：<br><img src="/../image/RNN-LSTM-GRU-GCN/img.png" alt="img.png"></p><h2 id="长短期记忆网络LSTM"><a href="#长短期记忆网络LSTM" class="headerlink" title="长短期记忆网络LSTM"></a>长短期记忆网络LSTM</h2><p>长短期记忆（Long short-term memory, LSTM）是一种特殊的RNN，主要是为了解决长序列训练过程中的梯度消失和梯度爆炸问题。简单来说，就是相比普通的RNN，LSTM能够在更长的序列中有更好的表现。</p><p><img src="/../image/RNN-LSTM-GRU-GCN/img_3.png" alt="img_3.png"><br>(左：RNN，右：LSTM)</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MARL</title>
      <link href="/posts/17763.html"/>
      <url>/posts/17763.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于我的科研方向是<code>多智能体强化学习</code>，且由于研一忙于课程和一些开源项目，导致我对一些科研方面的算法理解不够充分。刚好，最近一次和东大的联合组会轮到我讲了，借此深度理解一下这些算法。</p></blockquote><blockquote><p>在这篇笔记中，我会总结我的直系学长推荐我先看的多智能体强化学习知乎专栏内容，然后如果有时间，再总结我导师之前发给我让我看的论文。相关链接我会放在下面。</p></blockquote><p>知乎专栏：<a href="https://www.zhihu.com/column/c_1061939147282915328">https://www.zhihu.com/column/c_1061939147282915328</a></p><h2 id="基础知识与博弈"><a href="#基础知识与博弈" class="headerlink" title="基础知识与博弈"></a>基础知识与博弈</h2><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>在多智能体系统中，每个智能体通过与环境进行交互获取奖励值（reward）来学习改善自己的策略，从而获得该环境下最优策略的过程就多智能体强化学习。</p><p>在单智能体强化学习中，智能体所在的环境是稳定不变的，但是在多智能体强化学习中，环境是复杂的、动态的，因此给学习过程带来很大的困难。</p><ol><li>维度爆炸：在单体强化学习中，需要存储状态值函数或动作-状态值函数。在多体强化学习中，状态空间变大，联结动作空间随智能体数量指数增长，维度非常大，计算复杂。</li><li>目标奖励确定困难：多智能体系统中每个智能体的任务可能不同，但是彼此之间又相互耦合影响。奖励设计的优劣直接影响学习到的策略的好坏。</li><li>不稳定性：在多智能体系统中，多个智能体是同时学习的。当同伴的策略改变时，每个智能体自身的最优策略也可能会变化，这将对算法的收敛性带来影响。</li><li>探索-利用：探索不光要考虑自身对环境的探索，也要对同伴的策略变化进行探索，可能打破同伴策略的平衡状态。每个智能体的探索都可能对同伴智能体的策略产生影响，这将使算法很难稳定，学习速度慢。</li></ol><p>多智能体系统中智能体之间可能涉及到合作与竞争等关系，引入博弈的概念，将博弈论与强化学习相结合可以很好的处理这些问题。</p><h3 id="纳什均衡"><a href="#纳什均衡" class="headerlink" title="纳什均衡"></a>纳什均衡</h3><p><img src="/../image/MARL/img_1.png" alt="img_1.png"></p><h3 id="完全混合策略"><a href="#完全混合策略" class="headerlink" title="完全混合策略"></a>完全混合策略</h3><p>若一个策略对于智能体动作集中的所有动作的概率都大于0，则这个策略为一个完全混合策略。</p><h3 id="纯策略"><a href="#纯策略" class="headerlink" title="纯策略"></a>纯策略</h3><p>若智能体的策略对一个动作的概率分布为1，对其余的动作的概率分布为0，则这个策略为一个纯策略。</p><h3 id="零和博弈"><a href="#零和博弈" class="headerlink" title="零和博弈"></a>零和博弈</h3><p>零和博弈中，两个智能体是完全竞争对抗关系，则 <code>R1 = - R2</code> 。在零和博弈中只有一个纳什均衡值，即使可能有很多纳什均衡策略，但是期望的奖励是相同的。</p><h3 id="一般和博弈"><a href="#一般和博弈" class="headerlink" title="一般和博弈"></a>一般和博弈</h3><p>一般和博弈是指任何类型的矩阵博弈，包括完全对抗博弈、完全合作博弈以及二者的混合博弈。在一般和博弈中可能存在多个纳什均衡点。</p><blockquote><p>矩阵博弈和线性规划求双智能体矩阵博弈的纳什均衡策略可以看这篇：<a href="https://zhuanlan.zhihu.com/p/53474965">https://zhuanlan.zhihu.com/p/53474965</a></p></blockquote><h2 id="Minimax-Q"><a href="#Minimax-Q" class="headerlink" title="Minimax-Q"></a>Minimax-Q</h2><p>论文：<a href="https://courses.cs.duke.edu/spring07/cps296.3/littman94markov.pdf">Markov games as a framework for multi-agent reinforcement learning</a></p><p>Minimax-Q算法应用于<code>两个玩家的零和随机博弈中</code>。<code>Minimax-Q中的Minimax指的是使用minimax方法构建线性规划来求解每个特定状态s的阶段博弈的纳什均衡策略。Q指的是借用Q-learning中的TD方法来迭代学习状态值函数或动作-状态值函数。</code></p><p>在两玩家零和随机博弈中，给定一个状态s，则定义第i个智能体的状态值函数如下：意义为，<code>每个智能体最大化在与对手博弈中最差情况下的期望奖励值</code>。</p><p><img src="/../image/MARL/img_2.png" alt="img_2.png"></p><p>理想情况，如果算法能够对每一个状态-动作对访问无限次，那么该算法能够收敛到纳什均衡策略。但是在上述算法中存在几个缺点：</p><ol><li>在第5步中需要不断求解一个线性规划，这将造成学习速度的降低，增加计算时间。</li><li>为了求解第5步，智能体i需要知道所有智能体的动作空间，这个在分布式系统中将无法满足。</li><li>只满足收敛性，不满足合理性。Minimax-Q算法能够找到多智能体强化学习的纳什均衡策略，但是假设对手使用的不是纳什均衡策略，而是一个较差的策略，则当前智能体并不能根据对手的策略学习到一个更优的策略。该算法无法让智能体根据对手的策略来调节优化自己的策略，而只能找到随机博弈的纳什均衡策略。这是由于Minimax-Q算法是一个对手独立算法（opponent-independent algorithm），不论对手策略是怎么样的，都收敛到该博弈的纳什均衡策略。就算对手采用一个非常弱的策略，当前智能体也不能学习到一个比纳什均衡策略更好的策略。</li></ol><h2 id="Nash-Q-Learning"><a href="#Nash-Q-Learning" class="headerlink" title="Nash Q-Learning"></a>Nash Q-Learning</h2><p>论文：<a href="https://www.jmlr.org/papers/volume4/temp/hu03a.pdf">Nash Q-learning for general-sum stochastic games</a></p><p>Nash Q-Learning算法是将Minimax-Q算法<code>从零和博弈扩展到多人一般和博弈</code>的算法。在Minimax-Q算法中需要通过Minimax线性规划求解阶段博弈的纳什均衡点，拓展到<code>Nash Q-Learning算法就是使用二次规划求解纳什均衡点</code>。Nash Q-Learning算法在合作性均衡或对抗性均衡的环境中能够收敛到纳什均衡点，其收敛性条件是，在每一个状态s的阶段博弈中，都能够找到一个全局最优点或者鞍点，只有满足这个条件，Nash Q-Learning算法才能够收敛。与Minimax-Q算法相同，Nash Q-Learning算法求解二次规划的过程也非常耗时，降低了算法的学习速度。</p><p>其算法流程如下：</p><p><img src="/../image/MARL/img_3.png" alt="img_3.png"></p><p>该算法需要观测其他所有智能体的动作ai与奖励值ri。并且与Minimax-Q算法一样，只满足收敛性，不满足合理性。只能收敛到纳什均衡策略，不能根据其他智能体的策略来优化调剂自身的策略。</p><h2 id="Friend-or-Foe-Q-Learning"><a href="#Friend-or-Foe-Q-Learning" class="headerlink" title="Friend-or-Foe Q-Learning"></a>Friend-or-Foe Q-Learning</h2><p>论文：<a href="https://www.researchgate.net/profile/Michael-Littman/publication/2933305_Friend-or-Foe_Q-learning_in_General-Sum_Games/links/54b66cb80cf24eb34f6d19dc/Friend-or-Foe-Q-learning-in-General-Sum-Games.pdf">Friend-or-foe Q-learning in general-sum games</a></p><p>Friend-or-Foe Q-Learning（FFQ）算法也是从Minimax-Q算法拓展而来。为了能够处理一般和博弈，FFQ算法对一个智能体i，将其他所有智能体分为两组，一组为i的friend帮助i一起最大化其奖励回报，另一组为i的foe对抗i并降低i的奖励回报，因此对每个智能体而言都有两组。这样一个n智能体的一般和博弈就转化为了一个两智能体的零和博弈。</p><p>其纳什均衡策略求解方法如下所示：</p><p><img src="/../image/MARL/img_4.png" alt="img_4.png"></p><p>算法流程如下：</p><p><img src="/../image/MARL/img_5.png" alt="img_5.png"></p><p>有一种利用Minimax-Q算法进行多人博弈方法为，两队零和博弈，将所有智能体分成两个小组进行零和博弈。两队零和博弈中每一组有一个leader才控制这一队智能体的所有策略，获取的奖励值也是这一个小组的整体奖励值。</p><p>FFQ算法没有team learder，每个人选择自己动作学习自己的策略获得自己的奖励值，但是为了更新值，每个智能体需要在每一步观测其他所有friend与foe的执行动作。</p><p>FFQ与Minimax-Q算法一样都需要利用线性规划，因此算法整体学习速度会变慢。</p><h2 id="WoLF-Policy-Hill-Climbing"><a href="#WoLF-Policy-Hill-Climbing" class="headerlink" title="WoLF Policy Hill-Climbing"></a>WoLF Policy Hill-Climbing</h2><p>论文：<a href="https://pdf.sciencedirectassets.com/271585/1-s2.0-S0004370200X00872/1-s2.0-S0004370202001212/main.pdf?X-Amz-Security-Token=IQoJb3JpZ2luX2VjEGUaCXVzLWVhc3QtMSJHMEUCIQC83rDT43qYROWb01kvyuybyC5EMghziFRQfbzKh2phkAIgDDv7TwK+il2pEyYMJNLreVUvpkwWBgC41FYPaJ1i06cqvAUInf//////////ARAFGgwwNTkwMDM1NDY4NjUiDDwT6ryaWf366e7YEyqQBSV+k4Sy0RKqs/FblDXiW14ORHDzZeMEKYZ5LfWZdVYpVxwo4vTYmKH2nercH63Et4tIjK0e9nL/zjvPpjmkrFWHn6hO0F8KjMsnwlmzVepHF0btXh7AkZ3e5t/2bnTZ7qTDIfyIUlvNHlEKL/9K5mHZexxj3w3tRoxmqUu8NYM6l2eVAv+cEGunXeil0OTm/SRkYiIlKRNiuZikU2EPu3h9Psh00bAXL07iFhI5W4y3QkVAmyWJ9ZRz3XtitHSz+TVlNngLHNqDlo4LosRLqb7IYbTMz8mTRt+upsy1T6e+t1k0PCXzBrMR4xqRuv006eN8HG7/OHDEpmrKu7kne4KeuWyh1qyIHWZOtG2cqhDN/+t8okdIhgmNbKIikDVOUqNwejq1Mnka+0qSkQ1BabTqjK1RKv1gFNC3vkHeEheIYU8+1kJIT3NWLWHfETSWvpuS6cVQSBNvCJ4CkXUMq3tQFOkc1B36oBuNEDLMvBXbjpYWp9DgKJ3yAeyqO8juXKnp5J/3NM7Uom6qpwgK4XNNxbXWrpzjYQpeahoFc2F9qyOzBHnX3mb+2+MdRq1fUwZ0fxzmF0HwBL8VcOWdbgiPhK6qDQmufFdZsMowZirITlDpFdg0pa5F4PkH+OpYXYXQA+usAbQ/JLnUibNKgBd8Ssk2Fj7+Aj1H1+7hEDC+KVib31jzGP9aBwfa76WjOdwk+/VtOJmEMkw2novRj1vcWCAOB3rfg5xFumwxuEK0uDT1R0He0KxhDRKGErfMTRXnb/yzBt5MLsmAz5g8wUFQtqhEq3QhLmuGTVdOVFkX6vG2qiPJMQFrehup1kL1jEGqTSK7K9pcr+Mh//5bt5/spmxqMvOBRUAeZCYaEAYlMMnvpqoGOrEBjuaNrgG15OoT+QiARadKSKYw5yb49jYpL5ODDxgi370KIIs7mCTNedup3876q1Q1OH4IMlTPYRONhLrYVCCr/op8JfLOur2Kx4cAbHsxPmwrtlKhbwv/ByOhbxlQf+UKhNjDXNuR1tSn0DNiTsUyHtUoHD5Pp7unY1PXGDGbYbrnCR7ByWapCYxFzQ1IqYENVSoMPhKfMoOaVw3CEXofL7EIi2a840t/p1COhmawkApQ&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20231107T051949Z&X-Amz-SignedHeaders=host&X-Amz-Expires=300&X-Amz-Credential=ASIAQ3PHCVTYYPNOQKWR/20231107/us-east-1/s3/aws4_request&X-Amz-Signature=3d4d8f4e51351b7226cd8bc38cbc9fa5109884a7636050217642770bc18913c9&hash=c607cf9fed0bd128c473b32bef56a596967a6b23b8e4d2b87884f7626c46df4c&host=68042c943591013ac2b2430a89b270f6af2c76d8dfd086a07176afe7c76c2c61&pii=S0004370202001212&tid=spdf-d5458afb-6fde-4cc5-bd92-4518991575a2&sid=8008b1c63c486948dc7b9aa27c1ce9ec5b7fgxrqa&type=client&tsoh=d3d3LnNjaWVuY2VkaXJlY3QuY29t&ua=120e5c515d53530157&rr=82231f9f7f2904c0&cc=hk">Multiagent learning using a variable learning rate</a></p><p><img src="/../image/MARL/img_6.png" alt="img_6.png"></p><p>WolF是指，当智能体做的比期望值好的时候小心缓慢的调整参数，当智能体做的比期望值差的时候，加快步伐调整参数。</p><p>PHC是一种单智能体在稳定环境下的一种学习算法。该算法的核心就是通常强化学习的思想，增大能够得到最大累积期望的动作的选取概率。该算法具有合理性，能够收敛到最优策略。</p><p>其算法流程如下：</p><p><img src="/../image/MARL/img_7.png" alt="img_7.png"></p><p>为了将PHC应用于动态环境中，将WoLF与PHC算法结合，使得智能体获得的奖励在比预期差时，能够快速调整适应其他智能体策略变化，当比预期好时谨慎学习，给其他智能体适应策略变化的时间。并且WoLF-PHC算法能够收敛到纳什均衡策略，并且具备合理性，当其他智能体采用某个固定策略使，其也能收敛到一个目前状况下的最优策略而不是收敛到一个可能效果不好的纳什均衡策略处。在WoLF-PHC算法中，使用一个可变的学习速率 <code>δ</code> 来实现WoLF效果，当策略效果较差时使用 <code>δl</code> ，策略效果较好时使用 <code>δw</code> ，并且满足 <code>δl &gt; δw</code> 。还有一个优势是，WoLF-PHC算法不用观测其他智能体的策略、动作及奖励值，需要更少的空间去记录Q值，并且WoLF-PHC算法是通过PHC算法进行学习改进策略的，所以不需要使用线性规划或者二次规划求解纳什均衡，算法速度得到了提高。虽然WoLF-PHC算法在实际应用中取得了非常好的效果，并且能够收敛到最优策略。但是其收敛性在理论上一直没有得到证明。</p><p>其算法流程如下所示：</p><p><img src="/../image/MARL/img_8.png" alt="img_8.png"></p><blockquote><p>关于MiniMax-Q、Nash Q-Learning、Friend-or-Foe Q-Learning、WoLF Policy Hill-Climbing算法的详细介绍可以看这篇：<a href="https://www.cnblogs.com/zuti666/p/16909220.html">https://www.cnblogs.com/zuti666/p/16909220.html</a> 和 <a href="https://zhuanlan.zhihu.com/p/53563792">https://zhuanlan.zhihu.com/p/53563792</a></p></blockquote><h2 id="MADDPG"><a href="#MADDPG" class="headerlink" title="MADDPG"></a>MADDPG</h2><p>论文：<a href="https://arxiv.org/abs/1706.02275">Multi-Agent Actor-Critic for Mixed Cooperative-Competitive Environments</a></p><p>OpenAI 2017发表在NIPS 上的一篇文章。主要是将AC算法进行了一系列改进，使其能够适用于传统RL算法无法处理的复杂多智能体场景。</p><p>传统RL算法面临的一个主要问题是由于每个智能体都是在不断学习改进其策略，因此从每一个智能体的角度看，环境是一个动态不稳定的，这不符合传统RL收敛条件。并且在一定程度上，无法通过仅仅改变智能体自身的策略来适应动态不稳定的环境。由于环境的不稳定，将无法直接使用之前的经验回放等DQN的关键技巧。policy gradient算法会由于智能体数量的变多使得本就有的方差大的问题加剧。</p><p>MADDPG算法具有以下三点特征： </p><ol><li>通过学习得到的最优策略，在应用时只利用局部信息就能给出最优动作。 </li><li>不需要知道环境的动力学模型以及特殊的通信需求。 </li><li>该算法不仅能用于合作环境，也能用于竞争环境。</li></ol><p>MADDPG算法具有以下三点技巧：</p><ol><li>集中式训练，分布式执行：训练时采用集中式学习训练critic与actor，使用时actor只用知道局部信息就能运行。critic需要其他智能体的策略信息，本文给了一种估计其他智能体策略的方法，能够只用知道其他智能体的观测与动作。</li><li>改进了经验回放记录的数据。为了能够适用于动态环境，每一条信息由(x, x’, a1,…, an, r1,…, rn)组成，X &#x3D; (o1,…, on)。表示每个智能体的观测。</li><li>利用策略集合效果优化（policy ensemble）：对每个智能体学习多个策略，改进时利用所有策略的整体效果进行优化。以提高算法的稳定性以及鲁棒性。</li></ol><h3 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h3><h4 id="DQN"><a href="#DQN" class="headerlink" title="DQN"></a>DQN</h4><p>深度Q网络（deep Q-network）<br><img src="/../image/MARL/img_9.png" alt="img_9.png"></p><h4 id="SPG"><a href="#SPG" class="headerlink" title="SPG"></a>SPG</h4><p>随机策略梯度（stochastic policy gradient）</p><p><img src="/../image/MARL/img_10.png" alt="img_10.png"></p><h4 id="DPG"><a href="#DPG" class="headerlink" title="DPG"></a>DPG</h4><p>确定性策略梯度（deterministic policy gradient）</p><p><img src="/../image/MARL/img_11.png" alt="img_11.png"></p><h3 id="MADDPG-1"><a href="#MADDPG-1" class="headerlink" title="MADDPG"></a>MADDPG</h3><h4 id="多智能体AC设计"><a href="#多智能体AC设计" class="headerlink" title="多智能体AC设计"></a>多智能体AC设计</h4><p>MADDPG集中式的学习，分布式的应用。因此允许使用一些额外的信息（全局信息）进行学习，只要在应用的时候使用局部信息进行决策就行。这点就是Q-learning的一个不足之处，Q-learning在学习与应用时必须采用相同的信息。所以这里MADDPG对传统的AC算法进行了一个改进，Critic扩展为可以利用其他智能体的策略进行学习，这点的进一步改进就是每个智能体对其他智能体的策略进行一个函数逼近。<br><img src="/../image/MARL/img_12.png" alt="img_12.png"><br><img src="/../image/MARL/img_13.png" alt="img_13.png"></p><h4 id="估计其他智能体策略"><a href="#估计其他智能体策略" class="headerlink" title="估计其他智能体策略"></a>估计其他智能体策略</h4><p><img src="/../image/MARL/img_14.png" alt="img_14.png"></p><h4 id="策略集合优化"><a href="#策略集合优化" class="headerlink" title="策略集合优化"></a>策略集合优化</h4><p><img src="/../image/MARL/img_15.png" alt="img_15.png"></p><h3 id="相关PPT"><a href="#相关PPT" class="headerlink" title="相关PPT"></a>相关PPT</h3><p><img src="/../image/MARL/img_16.png" alt="img_16.png"><br><img src="/../image/MARL/img_17.png" alt="img_17.png"><br><img src="/../image/MARL/img_18.png" alt="img_18.png"><br><img src="/../image/MARL/img_19.png" alt="img_19.png"><br><img src="/../image/MARL/img_20.png" alt="img_20.png"></p><h2 id="IQL"><a href="#IQL" class="headerlink" title="IQL"></a>IQL</h2><p>论文：<a href="https://arxiv.org/abs/1511.08779">Multiagent Cooperation and Competition with Deep Reinforcement Learning</a></p><p>Independent Q-Learning</p><p>本文讲的是介绍如何将DQN用到Multi-agent问题中，并表示最直接的方法就是，智能体把其他智能体喝环境看作整体，每个智能体之间的决策相互独立（用原文的话说就是each agent is controlled by an independent Deep Q-Network）。</p><p>IQL发现，两个智能体都独立采用DQN，在不修改除了reward外的任何参数、细节，agent都能取得不错的成绩。这说明IQL可以作为多智能体强化学习的baseline。</p><p>IQL（independent Q-learning）算法非常简单暴力地给每个智能体执行一个Deep-Q-learning算法。IQL把单智能体Deep-Q-learning算法直接应用在多智能体学习领域，各个智能体是各自为政的。<code>这是此类算法的一个极端。</code></p><p>其他没啥要讲的。。。</p><p><img src="/../image/MARL/img_21.png" alt="img_21.png"></p><h2 id="COMA"><a href="#COMA" class="headerlink" title="COMA"></a>COMA</h2><p>论文：<a href="https://arxiv.org/abs/1705.08926">Counterfactual Multi-Agent Policy Gradients</a></p><p>COMA (counterfactual multi-agent) 使用一个集中式的critic网络计算优势函数A，统一给Agenti计算对应的actioni分别去执行。所谓CTDE（central training decentralize execution）。COMA是把Actor-critic单智能体算法直接应用在多智能体学习领域，各个智能体按照集中的critic网络指令行事，它们是完全协作关系。<code>这是此类算法的另一个极端。</code><br><img src="/../image/MARL/img_23.png" alt="img_23.png"></p><p>多智能体强化学习算法必然都是在IQL和COMA两个算法之间做平衡。Agent既不能完全独立行事，也不能完全按中心节点指令行事。</p><p>那么这些算法都在解决什么问题呢？</p><p>只要模型共享Qtot值函数，团队奖励值ri有可能仅仅是某几个智能体获得的，其它智能体并没有做贡献但缺获得了奖励值ri。这就是所谓多智能体信用分配（credit assignment）问题。</p><p>在COMA算法中，为了解决多智能体信用分配问题，提出了优势函数A（遍历Agenti动作空间μi里的所有动作，而保持其它Agent的动作空间μ–不变，计算每个Agenti的参数值），用来计算反事实基线（counterfactual baseline）。</p><p><img src="/../image/MARL/img_24.png" alt="img_24.png"></p><p>这个思想来自difference reward。difference reward的思想是：保持其他智能体的联合动作不动，把当前智能体的action替换为一个default action，检查值函数Q是否有变化，如果没有，代表当前智能体的action是无贡献的action，因为奖励r不是当前智能体的action获得的。但是difference reward思想有个问题，default action选谁？？？无法选择！！！为了解决这个问题，COMA定义了优势函数A，解决了多智能体信用分配问题。如果仔细看算法的A函数公式，它其实就是AC算法中常用的优势函数A在多智能体领域的扩展而已。</p><p><img src="/../image/MARL/img_25.png" alt="img_25.png"></p><p>COMA 与 MADDPG 在 actor network 上的不同之处在于前者使用的是 GRU 网络，为了更好的处理局部观察问题，但是后者使用的则是普通的 DNN。</p><p>COMA算法具体框架如下图所示：<br><img src="/../image/MARL/img_22.png" alt="img_22.png"></p><p>网络架构：<br><img src="/../image/MARL/img_26.png" alt="img_26.png"></p><h2 id="VDN"><a href="#VDN" class="headerlink" title="VDN"></a>VDN</h2><p>论文：<a href="https://arxiv.org/abs/1706.05296">Value-Decomposition Networks For Cooperative Multi-Agent Learning</a></p><p>VDN（Value-Decomposition Networks）算法是一种用于多智能体强化学习（MARL）的算法。它旨在解决多智能体系统中合作与竞争的问题，其中各个智能体需要同时考虑个体利益与整体目标。</p><p>VDN算是大名鼎鼎的QMIX算法的前身。VDN算法假定：<code>Qtot是每个智能体的Qi的算术加和。对于智能体Agenti来说，它只用最大化Qtot函数的子项Qi函数即可。</code>如下图：<br>左边是IQL，右边是VDN<br><img src="/../image/MARL/img_27.png" alt="img_27.png"></p><p>作者假定如下等式成立：<br><img src="/../image/MARL/img_29.png" alt="img_29.png"></p><p>h表示序列观察，a表示序列动作。 注意到，上述分解满足一个很好的性质，即对左边的联合 Q function 进行 操作，等价于对右边每一个局部 Q function 分别进行 。这样可以保证训练完毕后去中心化执行时，即使整个系统只基于局部观察进行决策，其策略也是与基于全局观察进行决策是一致的。</p><p>推导上式：<br>假定整个多智能体系统中包含两个智能体，并且全局回报函数是每个智能体的局部回报函数的加和：<br><img src="/../image/MARL/img_30.png" alt="img_30.png"><br>这样分解后的 Q 函数是基于全局观察的。由于使用的网络结构是 LSTM，那么估计误差是可以缩小的，并且还可以通过智能体之间的通信来进一步减小误差，所以本文假设：<br><img src="/../image/MARL/img_31.png" alt="img_31.png"></p><p>网络架构：<br><img src="/../image/MARL/img_28.png" alt="img_28.png"></p><p>VDN算法强调的是把总的Q相信分解为多个Q之和，每个Q对应每个智能体的动作价值，这种会导致一个结果，那就是这样累计求和的Q可能没有具体的意义、吃大锅饭导致有agent划水之类的结果。这些问题在QMIX中得到了比较好的解决。</p><h2 id="QMIX"><a href="#QMIX" class="headerlink" title="QMIX"></a>QMIX</h2><p>论文：<a href="https://arxiv.org/abs/1803.11485">QMIX: Monotonic Value Function Factorisation for Deep Multi-Agent Reinforcement Learning</a></p><p>深度多智能体强化学习的单调值函数分解</p><p>QMIX是一个多智能体强化学习算法，具有如下特点： </p><ol><li>学习得到分布式策略。 </li><li>本质是一个值函数逼近算法。 </li><li>由于对一个联合动作-状态只有一个总奖励值，而不是每个智能体得到一个自己的奖励值，因此只能用于合作环境，而不能用于竞争对抗环境。 </li><li>QMIX算法采用集中式学习，分布式执行应用的框架。通过集中式的信息学习，得到每个智能体的分布式策略。 </li><li>训练时借用全局状态信息来提高算法效果。是后文提到的VDN方法的改进。 </li><li>接上一条，QMIX设计一个神经网络来整合每个智能体的局部值函数而得到联合动作值函数，VDN是直接求和。 </li><li>每个智能体的局部值函数只需要自己的局部观测，因此整个系统在执行时是一个分布式的，通过局部值函数，选出累积期望奖励最大的动作执行。 </li><li>算法使联合动作值函数与每个局部值函数的单调性相同，因此对局部值函数取最大动作也就是使联合动作值函数最大。 </li><li>算法针对的模型是一个分布式多智能体部分可观马尔可夫决策过程（Dec-POMDP）。</li></ol><h3 id="背景知识-1"><a href="#背景知识-1" class="headerlink" title="背景知识"></a>背景知识</h3><h4 id="MARL核心问题"><a href="#MARL核心问题" class="headerlink" title="MARL核心问题"></a>MARL核心问题</h4><p>在多智能体强化学习中一个关键的问题就是如何学习联合动作值函数，因为该函数的参数会随着智能体数量的增多而成指数增长，<code>如果动作值函数的输入空间过大，则很难拟合出一个合适函数来表示真实的联合动作值函数</code>。另一个问题就是学得了联合动作值函数后，<code>如何通过联合值函数提取出一个优秀的分布式的策略</code>。这其实是单智能体强化学习拓展到MARL的核心问题。</p><h4 id="Dec-POMDP"><a href="#Dec-POMDP" class="headerlink" title="Dec-POMDP"></a>Dec-POMDP</h4><p>Dec-POMDP指的是分布式部分可观察马尔可夫决策过程（Decentralized Partially Observable Markov Decision Process）。在 Dec-POMDP 中，有多个智能体同时存在，并且每个智能体只能观察到局部的环境信息，而不能直接获取全局状态。此外，每个智能体的动作会影响整个系统的演变。<br><img src="/../image/MARL/img_32.png" alt="img_32.png"></p><h4 id="IQL-1"><a href="#IQL-1" class="headerlink" title="IQL"></a>IQL</h4><p>IQL（independent Q-learning）就是非常暴力的给每个智能体执行一个Q-learning算法，因为共享环境，并且环境随着每个智能体策略、状态发生改变，对每个智能体来说，环境是动态不稳定的，因此这个算法也无法收敛，但是在部分应用中也具有较好的效果。</p><h4 id="VDN-1"><a href="#VDN-1" class="headerlink" title="VDN"></a>VDN</h4><p>如前介绍：<br><img src="/../image/MARL/img_33.png" alt="img_33.png"></p><h4 id="DRQN"><a href="#DRQN" class="headerlink" title="DRQN"></a>DRQN</h4><p>DRQN是一个用来处理POMDP（部分可观马尔可夫决策过程）的一个算法，其采用LSTM替换DQN卷基层后的一个全连接层，来达到能够记忆历史状态的作用，因此可以在部分可观的情况下提高算法性能。由于QMIX解决的是多智能体的POMDP问题，因此每个智能体采用的是DRQN算法。</p><h3 id="QMIX-1"><a href="#QMIX-1" class="headerlink" title="QMIX"></a>QMIX</h3><p>QMIX是在VDN上的一种拓展，由于VDN只是将每个智能体的局部动作值函数求和相加得到联合动作值函数，虽然满足联合值函数与局部值函数单调性相同的可以进行分布化策略的条件，但是其没有在学习时利用状态信息以及没有采用非线性方式对单智能体局部值函数进行整合，使得VDN算法还有很大的提升空间。QMIX就是采用一个混合网络对单智能体局部值函数进行合并，并在训练学习过程中加入全局状态信息辅助，来提高算法性能。</p><p>QMIX约束条件：<br><img src="/../image/MARL/img_34.png" alt="img_34.png"><br>也就是总Q关于每个agent的偏导都必须是正的。也就是，对于每个agent来说，追求自身收益的最大化是没有错误的（都对全局有不小于0的贡献）。</p><p>具体网络结构如下：<br><img src="/../image/MARL/img_35.png" alt="img_35.png"></p><p>图(c)表示每个智能体采用一个DRQN来拟合自身的Q值函数得到Qi(τi,ai; θi)，DRQN循环输入当前的观测oi,t，以及上一时刻的动作ai,t-1来得到Q值。</p><p>图(b)表示混合网络的结构。其输入为每个DRQN网络的输出。为了满足上述的单调性约束，混合网络的所有权值都是非负数，对偏移量不做限制，这样就可以确保满足单调性约束。</p><p>为了能够更多的利用到系统的状态信息st ，采用一种超网络（hypernetwork），将状态st作为输入，输出为混合网络的权值及偏移量。为了保证权值的非负性，采用一个线性网络以及绝对值激活函数保证输出不为负数。对偏移量采用同样方式但没有非负性的约束，混合网络最后一层的偏移量通过两层网络以及ReLU激活函数得到非线性映射网络。由于状态信息st是通过超网络混合到Qtot中的，而不是仅仅作为混合网络的输入项，这样带来的一个好处是，如果作为输入项则st的系数均为正，这样则无法充分利用状态信息来提高系统性能，相当于舍弃了一半的信息量。</p><p>QMIX的Loss：<br><img src="/../image/MARL/img_36.png" alt="img_36.png"></p><p>更新用到了传统的DQN的思想，其中b表示从经验记忆中采样的样本数量，<br><img src="/../image/MARL/img_37.png" alt="img_37.png"></p><p>由于满足上文的单调性约束，对Qtot进行argmax 操作的计算量就不在是随智能体数量呈指数增长了，而是随智能体数量线性增长，极大的提高了算法效率。</p><h2 id="QTRAN"><a href="#QTRAN" class="headerlink" title="QTRAN"></a>QTRAN</h2><p>论文：<a href="https://arxiv.org/abs/1905.05408">QTRAN: Learning to Factorize with Transformation for Cooperative Multi-Agent Reinforcement Learning</a></p><p>学习因式分解以实现协作多智能体强化学习 Q-Tran</p><p>QMIX 在近似𝑄𝑡𝑜𝑡𝑎𝑙(𝒔, 𝒖)时额外使用了全局状态𝒔，这样就可以基于全局状态𝒔进行训练。但是如果直接将𝒔和[𝑄1, … , 𝑄𝑁]一起输入到神经网络𝑓去得到𝑄𝑡𝑜𝑡𝑎𝑙， 由于前面限制了𝑓中的参数是非负的， 但这会对𝑄𝑡𝑜𝑡𝑎𝑙和𝒔的关系进行不必要的限制，因为只希望局部最优动作就是全局最优动作。QTRAN 聚焦于释放累加性和单调性的限制， 去分解所有可分解的任务。 其思想在于只要保证个体最优动作𝑢̅和联合最优动作𝑢∗是相同的。</p><p>QTRAN 认为既然 VDN 和 QMIX 是通过累加或者单调近似得到的𝑄𝑡𝑜𝑡𝑎𝑙， 那么𝑄𝑡𝑜𝑡𝑎𝑙就很有可能与真实的𝑄𝑡𝑜𝑡𝑎𝑙 ∗ 相差很远， 那我不如直接去学习一个真实的𝑄𝑡𝑜𝑡𝑎𝑙 ∗ 。</p><p><img src="/../image/MARL/img_38.png" alt="img_38.png"></p><p>这里的Qjt就是学习得到的，介于各个agent的收益Q之和和实际局面价值之间的联合补偿,建立了局部Q和全局Q之间的联系。</p><p>为了满足上述定理，QTRAN 提出了两个算法 QTRAN-base 以及 QTRAN-alt:<br><img src="/../image/MARL/img_41.png" alt="img_41.png"></p><h3 id="TRAN-base"><a href="#TRAN-base" class="headerlink" title="TRAN-base"></a>TRAN-base</h3><p>分为三部分：</p><ol><li>独立 Q 网络</li><li>联合 Q 网络</li><li>联合 V 网络</li></ol><p>整体的Loss如下：<br><img src="/../image/MARL/img_39.png" alt="img_39.png"><br><img src="/../image/MARL/img_40.png" alt="img_40.png"></p><h3 id="TRAN-alt"><a href="#TRAN-alt" class="headerlink" title="TRAN-alt"></a>TRAN-alt</h3><p>QTRAN-alt 是针对 QTRAN（Q-function Transfer）算法的一个改进版本，旨在解决原始 QTRAN 在处理非零约束时的问题。</p><p>作者认为约束：<br><img src="/../image/MARL/img_42.png" alt="img_42.png"></p><p>在原始 QTRAN 算法中，对于非零动作的约束（对应公式中的第二个约束），可能会过于松弛，导致算法难以准确地拟合联合 Q 函数。这是因为在训练数据中的数据很少，大部分的数据都可能满足第二个约束。</p><p>为了解决这个问题，QTRAN-alt 提出了一个新的定理，将原始约束中的第二个约束替换为一个更强的约束。这个新的约束使得算法能够更准确地拟合联合 Q 函数，从而提升了算法的性能和训练效果。<br><img src="/../image/MARL/img_43.png" alt="img_43.png"><br>这个约束更多的聚焦于非0的训练数据（这一部分数据占训练初期训练集的大部分）。为了满足这一约束，需要把上面列出的第三个损失函数替换为：</p><p><img src="/../image/MARL/img_44.png" alt="img_44.png"></p><p>具体来说，QTRAN-alt 对于非零动作的约束更加严格，以提高算法的性能。这种改进使得 QTRAN-alt 在处理合作问题中的分工与协作时表现更为优越。</p><p>算法流程：<br><img src="/../image/MARL/img.png" alt="img.png"></p><h2 id="MFMARL"><a href="#MFMARL" class="headerlink" title="MFMARL"></a>MFMARL</h2><p>论文：<a href="https://arxiv.org/abs/1802.05438v4">Mean Field Multi-Agent Reinforcement Learning</a></p><p>平均场多智能体强化学习</p><p><code>MFMARL主要致力于极大规模的多智能体强化学习问题，解决大规模智能体之间的交互及计算困难。</code>由于多智能体强化学习问题不仅有环境交互问题，还有智能体之间的动态影响，因此为了得到最优策略，每个智能体都需要考察其他智能体的动作及状态得到联合动作值函数。由于状态空间跟动作空间随着智能体数量的增多而迅速扩大，这给计算以及探索带来了非常大的困难。</p><p>MFMARL算法借用了平均场论（Mean Field Theory，MFT）的思想，其对多智能体系统给出了一个近似假设：对某个智能体，其他所有智能体对其产生的作用可以用一个均值替代。这样就就将一个智能体与其邻居智能体之间的相互作用简化为两个智能体之间的相互作用（该智能体与其所有邻居的均值）。这样极大地简化了智能体数量带来的模型空间的增大。应用平均场论后，学习在两个智能体之间是相互促进的：单个智能体的最优策略的学习是基于智能体群体的动态；同时，集体的动态也根据个体的策略进行更新。</p><p>下面具体介绍算法细节，其结合平均场论得出两个主要算法MF-Q与MF-AC，是对Q-learning以及AC算法的改进，并且在理论上给出了收敛性证明，能够收敛到纳什均衡点。该算法可以应用于竞争环境或合作环境，并且每个智能体不知道环境的模型以及奖励模型，但是能够观察邻居智能体的动作及奖励。每个智能体有自己的奖励值。</p><h3 id="背景知识-2"><a href="#背景知识-2" class="headerlink" title="背景知识"></a>背景知识</h3><h4 id="随机博弈"><a href="#随机博弈" class="headerlink" title="随机博弈"></a>随机博弈</h4><p><img src="/../image/MARL/img_45.png" alt="img_45.png"></p><h4 id="Nash-Q"><a href="#Nash-Q" class="headerlink" title="Nash-Q"></a>Nash-Q</h4><p><img src="/../image/MARL/img_46.png" alt="img_46.png"></p><h3 id="Mean-Field-MARL"><a href="#Mean-Field-MARL" class="headerlink" title="Mean Field MARL"></a>Mean Field MARL</h3><p><img src="/../image/MARL/img_50.png" alt="img_50.png"></p><h4 id="平均场近似"><a href="#平均场近似" class="headerlink" title="平均场近似"></a>平均场近似</h4><p><img src="/../image/MARL/img_47.png" alt="img_47.png"></p><p><img src="/../image/MARL/img_48.png" alt="img_48.png"></p><p><img src="/../image/MARL/img_49.png" alt="img_49.png"></p><h3 id="算法设计"><a href="#算法设计" class="headerlink" title="算法设计"></a>算法设计</h3><p>原文中将(7)通过参数化用神经网络进行拟合逼近，与DQN以及AC算法结合，分别给出了MF-Q与MF-AC算法。</p><h4 id="MF-Q"><a href="#MF-Q" class="headerlink" title="MF-Q"></a>MF-Q</h4><p>通过神经网络拟合(7)式中的Q函数，使用如下所示的代价函数，与DQN中相同，为了减小拟合的Q值与真实Q值之间的误差<br><img src="/../image/MARL/img_51.png" alt="img_51.png"></p><p>对上式求导可以得出参数梯度方向如下:<br><img src="/../image/MARL/img_52.png" alt="img_52.png"></p><p>通过梯度下降法可以得到参数更新公式。</p><p>算法流程：<br><img src="/../image/MARL/img_53.png" alt="img_53.png"></p><h4 id="MF-AC"><a href="#MF-AC" class="headerlink" title="MF-AC"></a>MF-AC</h4><p>类似DPG，使用神经网络拟合一个策略替换玻尔兹曼机通过Q的到的策略，则得到了MF-AC算法。</p><p>类似SPG，actor策略梯度公式可以写为：<br><img src="/../image/MARL/img_54.png" alt="img_54.png"></p><p>critic类似于MF-Q的更新方式(9)</p><p><img src="/../image/MARL/img_55.png" alt="img_55.png"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="/../image/MARL/img_56.png" alt="img_56.png"></p><blockquote><p>至此，MARL的入门已结束，后面会结合科研方向看论文想点子。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 强化学习 </category>
          
          <category> 多智能体强化学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 强化学习 </tag>
            
            <tag> 多智能体强化学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强化学习</title>
      <link href="/posts/17762.html"/>
      <url>/posts/17762.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>之前没有深入和系统的学习过强化学习，最近由于科研刚需，上网查资料刚好看到知乎上面有个大佬的强化学习的系列文章，感觉写的很好，于是就把他的文章看了一遍，顺便做了一些笔记，这里记录一下。</p></blockquote><p>原文： <a href="https://zhuanlan.zhihu.com/p/111895463">https://zhuanlan.zhihu.com/p/111895463</a></p><p>卧槽大佬讲的真的好，笔记记不了一点！！！建议大家都去看原文！</p><p>后面可能会自己写一下 <code>MADDPG</code> 和 <code>MATD3</code> 的相关内容，到时候再更新。</p><blockquote><p>2023&#x2F;10&#x2F;23 这几天把大佬的强化学习专栏看了一遍了，真的很不错，但是我觉得还是得自己总结一下重难点，且这周五和东大的联合组会轮到我讲了，刚好深入理解一下强化学习算法。所以还是写一下这篇笔记吧！</p></blockquote><p>学习路线：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.png" alt="学习路线"></p><h2 id="马尔可夫树"><a href="#马尔可夫树" class="headerlink" title="马尔可夫树"></a>马尔可夫树</h2><p>强化学习的任务：</p><ul><li>我们希望用强化学习的方式，使某个<strong>智能体</strong>获得<strong>独立自主</strong>地完成某种任务的能力。 </li><li>智能体学习和工作的地方，称为<strong>环境</strong>。</li><li>所谓独立自主，就是智能体一旦启动，就不需要人指挥了。</li></ul><h3 id="经典马尔可夫链"><a href="#经典马尔可夫链" class="headerlink" title="经典马尔可夫链"></a>经典马尔可夫链</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A4%AB%E9%93%BE.png" alt="马尔科夫链.png"></p><ul><li>状态(state)：智能体观察到的当前环境的部分或者全部特征。<ul><li>注意：环境的特征可能有许多，但只有智能体能够观察到的特征才算是状态。所以也用observation表示状态。</li></ul></li><li>动作(action)：智能体做出的具体行为。<ul><li><strong>动作空间</strong>就是该智能体能够做出的动作数量。智能体身处十字路口。那么我们的方向就有4个。也就是说，动作空间为4个动作。</li></ul></li><li>奖励(reward)：智能体在某个状态下采取某个动作所获得的反馈。<ul><li>奖励是一个标量，可以是正数，也可以是负数。奖励越大，说明智能体做的越好。奖励越小，说明智能体做的越差。</li></ul></li></ul><h3 id="RL一般步骤"><a href="#RL一般步骤" class="headerlink" title="RL一般步骤"></a>RL一般步骤</h3><ol><li>智能体在环境中，观察到状态(S)；</li><li>状态(S)被输入到智能体，智能体经过计算，选择动作(A);</li><li>动作(A)使智能体进入另外一个状态(S)，并返回奖励(R)给智能体。</li><li>智能体根据返回，调整自己的策略。 重复以上步骤，一步一步创造马尔科夫链。</li></ol><h3 id="马尔可夫树-1"><a href="#马尔可夫树-1" class="headerlink" title="马尔可夫树"></a>马尔可夫树</h3><p>马尔科夫链之所以是我们现在看到的一条链条。是因为我们站在现在，往过去看，所以是一条确定的路径。但如果我们往前看，就并不是一条路径，而是充满了各种”不确定性”， 即”马尔可夫树”。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E9%A9%AC%E5%B0%94%E7%A7%91%E5%A4%AB%E6%A0%91.png" alt="马尔科夫树.png"></p><p>这种”不确定性”来自两个方面： </p><ul><li>智能体的行动选择(策略)。</li><li>环境的不确定性。</li></ul><h2 id="RL中的Q值和V值"><a href="#RL中的Q值和V值" class="headerlink" title="RL中的Q值和V值"></a>RL中的Q值和V值</h2><p>并不能单纯通过R来衡量一个动作的好坏，因为R只是一个瞬时的反馈，而我们需要的是长期的反馈。在做决策的时候，需要把眼光放远点，把未来的价值换到当前，才能做出选择。</p><p>我们希望可以有一种方法评估我做出每种选择价值。这样，只要看一下标记，以后的事情也不用理，选择那个动作价值更大，就选那个动作就可以了。</p><ul><li>评估动作的价值称为<strong>Q值</strong>：它代表了智能体选择这个动作后，一直到最终状态奖励总和的期望。</li><li>评估状态的价值称为<strong>V值</strong>：它代表了智能体在这个状态下，一直到最终状态的奖励总和的期望。</li></ul><p>价值越高，表示从当前状态到最终状态能获得的平均奖励将会越高。因为智能体的目标数是获取尽可能多的奖励，所以智能体在当前状态，只需要选择价值高的动作就可以了。</p><h3 id="V值的定义"><a href="#V值的定义" class="headerlink" title="V值的定义"></a>V值的定义</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/V%E5%80%BC%E7%9A%84%E5%AE%9A%E4%B9%89.png" alt="V值的定义.png"></p><p>假设现在需要求某状态S的V值，可以这样：</p><ol><li>从S点出发，并影分身出若干个自己;</li><li>每个分身按照当前的策略 选择行为;</li><li>每个分身一直走到最终状态，并计算一路上获得的所有奖励总和;</li><li>计算每个影分身获得的平均值,这个平均值就是要求的V值。</li></ol><p>总结：<code>从某个状态，按照策略 ，走到最终状态很多很多次；最终获得奖励总和的平均值，就是V值。</code></p><p><code>V值跟选择的策略有很大的关系</code> 。</p><p>看这样一个简化的例子，从S出发，只有两种选择，A1，A2；从A1，A2只有一条路径到最终状态，获得总奖励分别为10和20。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E4%BE%8B%E5%AD%901.png" alt="例子1.png"></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%AD%96%E7%95%A51.png" alt="策略1.png"></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%AD%96%E7%95%A52.png" alt="策略2.png"></p><p>可以看出不同的策略，计算出的V值是不一样的。</p><h3 id="Q值的定义"><a href="#Q值的定义" class="headerlink" title="Q值的定义"></a>Q值的定义</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Q%E5%80%BC%E7%9A%84%E5%AE%9A%E4%B9%89.png" alt="Q值的定义.png"></p><p>现在需要计算，某个状态S0下的一个动作A的Q值： </p><ol><li>从A这个节点出发，使用影分身之术； </li><li>每个影分身走到最终状态,并记录所获得的奖励； </li><li>求取所有影分身获得奖励的平均值，这个平均值就是要求的Q值。</li></ol><p>总结：<code>从某个状态选取动作A，走到最终状态很多很多次；最终获得奖励总和的平均值，就是Q值。</code></p><p>与V值不同，Q值和策略并没有直接相关，而<code>与环境的状态转移概率相关，而环境的状态转移概率是不变的。</code></p><h3 id="V值和Q值关系"><a href="#V值和Q值关系" class="headerlink" title="V值和Q值关系"></a>V值和Q值关系</h3><p><code>Q和V之间是可以相互换算的</code>。</p><h4 id="Q值转V值"><a href="#Q值转V值" class="headerlink" title="Q值转V值"></a>Q值转V值</h4><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Q%E5%80%BC%E8%BD%ACV%E5%80%BC.png" alt="Q值转V值.png"></p><p>从定义出发，我们要求的V值，就是从状态S出发，到最终获取的所获得的奖励总和的期望值。也就是蓝色框部分。</p><p>S状态下有若干个动作，每个动作的Q值，就是从这个动作之后所获得的奖励总和的期望值。也就是红色框部分。</p><p>假设已经计算出每个动作的Q值，那么在计算V值的时候就不需要一直走到最终状态了，只需要走到动作节点，看一下每个动作节点的Q值，根据策略 ，计算Q的期望就是V值了。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Q%E5%80%BC%E8%BD%ACV%E5%80%BC1.png" alt="Q值转V值1.png"></p><p>更正式的公式如下：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E5%85%AC%E5%BC%8F1.png" alt="公式1.png"></p><p>解释：<code>一个状态的V值，就是这个状态下的所有动作的Q值，在策略下的期望。</code></p><h4 id="V值转Q值"><a href="#V值转Q值" class="headerlink" title="V值转Q值"></a>V值转Q值</h4><p><code>Q是V的期望。</code>而这里不需要关注策略，这里是环境的状态转移概率决定的。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/V%E5%80%BC%E8%BD%ACQ%E5%80%BC.png" alt="V值转Q值.png"></p><p><code>当选择A，并转移到新的状态时，就能获得奖励，我们必须把这个奖励也算上！</code></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/V%E5%80%BC%E8%BD%ACQ%E5%80%BC1.png" alt="V值转Q值1.png"></p><p>更正式的公式如下：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E5%85%AC%E5%BC%8F2.png" alt="公式2.png"></p><blockquote><p>折扣率 在强化学习中，有某些参数是人为主观制定。这些参数并不能推导，但在实际应用中却能解决问题，所以我们称这些参数为超参数，而折扣率就是一个超参数。</p></blockquote><h3 id="V值转V值"><a href="#V值转V值" class="headerlink" title="V值转V值"></a>V值转V值</h3><p>实际应用中，更多会从V到V。其实就是把Q值的公式代入V值的公式。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/V%E5%80%BC%E8%BD%ACV%E5%80%BC.png" alt="V值转V值.png"></p><h2 id="MC"><a href="#MC" class="headerlink" title="MC"></a>MC</h2><p>蒙地卡罗方法(Monte-Carlo)</p><h3 id="蒙地卡罗算法"><a href="#蒙地卡罗算法" class="headerlink" title="蒙地卡罗算法"></a>蒙地卡罗算法</h3><ol><li>把智能体放到环境的任意状态；</li><li>从这个状态开始按照策略进行选择动作，并进入新的状态。</li><li>重复步骤2，直到最终状态；</li><li>从最终状态开始向前回溯：计算每个状态的G值。</li><li>重复1-4多次，然后平均每个状态的G值，这就是要求的V值。</li></ol><h3 id="G值的意义"><a href="#G值的意义" class="headerlink" title="G值的意义"></a>G值的意义</h3><p>重要：<code>G值是一个具体的累积奖励值，而Q值和V值是对这个累积奖励值的估计。</code></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/G%E5%80%BC%E7%9A%84%E6%84%8F%E4%B9%89.png" alt="G值的意义.png"></p><ul><li>第一步，根据策略往前走，一直走到最后，期间什么都不用算，还需要记录每一个状态转移，获得多少奖励r即可。</li><li>第二步，从终点往前走，一遍走一遍计算G值。G值等于上一个状态的G值(记作G’),乘以一定的折扣(gamma),再加上r。</li></ul><p>所以G值的意义在于，<code>在这一次游戏中，某个状态到最终状态的奖励总和(理解时可以忽略折扣值gamma)。</code></p><p>当进行多次试验后，有可能会经过某个状态多次，通过回溯，也会有多个G值。 重复刚才说的，每一个G值，就是每次到最终状态获得的奖励总和。<code>而V值是某个状态下，通过影分身到达最终状态，所有影分身获得的奖励的平均值。</code></p><p>理解：</p><ol><li><code>G的意义：在某个路径上，状态S到最终状态的总收获。 </code></li><li><code>V和G的关系：V是G的平均数。</code></li></ol><h3 id="V和策略相关"><a href="#V和策略相关" class="headerlink" title="V和策略相关"></a>V和策略相关</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%AD%96%E7%95%A53.png" alt="策略3.png"></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%AD%96%E7%95%A54.png" alt="策略4.png"></p><p>由于策略改变，经过某条路径的概率就会产生变化。因此最终试验经过的次数就不一样了。</p><h3 id="蒙地卡罗算法的缺点"><a href="#蒙地卡罗算法的缺点" class="headerlink" title="蒙地卡罗算法的缺点"></a>蒙地卡罗算法的缺点</h3><p>每一次游戏，都需要先从头走到尾，再进行回溯更新。如果最终状态很难达到，那可能每一次都要转很久很久才能更新一次G值。</p><h3 id="MC的更新公式"><a href="#MC的更新公式" class="headerlink" title="MC的更新公式"></a>MC的更新公式</h3><p>上面计算V值其实相当麻烦，因为每一个状态都需要建立一个空间，记录每个轨迹下的G值。</p><p>那有没有一种方法，可以用更少的空间计算V值呢？当然有，那就是<code>增量更新</code>。</p><h4 id="增量更新"><a href="#增量更新" class="headerlink" title="增量更新"></a>增量更新</h4><p>现在我们只需要记录之前的平均值V，新加进来的G，和次数N。我们把V和G的差，除以N，然后再加到原来的平均值V上，就能计算到新的V值。 </p><p><code>V_new = (V_old - G) * (1 / N) + V_old</code></p><ul><li>V_old：原来的V值</li><li>G：这一次回溯后，计算出来的G值</li><li>N: 这个状态被经过多少次</li><li>V_new：新计算出来的V值</li></ul><h4 id="更进一步"><a href="#更进一步" class="headerlink" title="更进一步"></a>更进一步</h4><p>这样计算还是比较麻烦，我们甚至可以不用记录N，把(1&#x2F;N)设置成为一个固定的数，例如0.1、0.2(还记得超参数吗？)。我们把这个值称为<code>学习率</code>。</p><p>这就相当于，我们新来的G和V_old的差的十分之一，会被加到V_new上！也就是说，每一次G都会引导V增加一些或者减少一些，而这个V值慢慢就会接近真正的V值。</p><p>这里的G，也称为V的更新目标。</p><p>而学习率就可以理解为，每次V向目标靠近的幅度；学习率越大，表示向G靠近的幅度越大，反之则越小。</p><h4 id="两种理解方式"><a href="#两种理解方式" class="headerlink" title="两种理解方式"></a>两种理解方式</h4><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E4%B8%A4%E7%A7%8D%E7%90%86%E8%A7%A3%E6%96%B9%E5%BC%8F.png" alt="两种理解方式.png"></p><h2 id="TD"><a href="#TD" class="headerlink" title="TD"></a>TD</h2><p>时序差分算法TD(Temporal-Difference)</p><h3 id="TD和MC的比较"><a href="#TD和MC的比较" class="headerlink" title="TD和MC的比较"></a>TD和MC的比较</h3><p>TD算法对蒙地卡罗(MC)进行了改进：</p><ol><li>和蒙地卡罗(MC)不同：<code>TD算法只需要走N步，不用走到终点，就可以开始回溯更新。</code> </li><li>和蒙地卡罗(MC)一样：需要先走N步，每经过一个状态，把奖励r记录下来。然后开始回溯。 </li><li>那么，状态的V值怎么算呢？其实和蒙地卡罗一样，就假设N步之后，就到达了最终状态了。<ul><li>假设“最终状态”上之前没有走过，所以这个状态上的纸是空白的。这个时候我们就当这个状态为0. </li><li>假设“最终状态”上已经走过了，这个状态的V值，就是当前值。然后我们开始回溯。</li></ul></li></ol><h3 id="直观理解"><a href="#直观理解" class="headerlink" title="直观理解"></a>直观理解</h3><p>从A状态，经过1步，到B状态。什么都不管就当B状态是最终状态了。此时<code>N = 0</code>，也叫做<code>TD(0)</code>。</p><p>但B状态本身就带有一定的价值，也就是V值。其意义就是从B状态到最终状态的总价值期望。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/TD(0).png" alt="TD(0).png"></p><p>假设B状态的V值是对的，那么，通过回溯计算，就能知道A状态的更新目标了。</p><h3 id="更新公式"><a href="#更新公式" class="headerlink" title="更新公式"></a>更新公式</h3><p>TD并走走完整段路程，而是半路就截断。用半路的路牌，更新当前的路牌。 <code>所以只需要把MC的更新目标，改为TD的更新目标即可。</code></p><p><code>在MC，G是更新目标，而在TD，我们只不过把更新目标从G，改成r+gamma*V</code></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E6%9B%B4%E6%96%B0%E5%85%AC%E5%BC%8F.png" alt="更新公式.png"></p><h2 id="Q-learning"><a href="#Q-learning" class="headerlink" title="Q-learning"></a>Q-learning</h2><p>之前用TD(0)预估状态价值V:<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/TD(0)%E6%9B%B4%E6%96%B0%E5%85%AC%E5%BC%8F.png" alt="TD(0)更新公式.png"></p><p>图解：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/TD(0)%E5%9B%BE%E8%A7%A3.png" alt="TD(0)图解.png"></p><p>TD能够用在V值，那么也能用在计算Q值上。</p><h3 id="TD之于Q值估算"><a href="#TD之于Q值估算" class="headerlink" title="TD之于Q值估算"></a>TD之于Q值估算</h3><p>现在用上TD的思路。 在St，智能体根据策略pi，选择动作At，进入S(t+1)状态，并获得奖励R。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%94%A8TD%E4%BC%B0%E8%AE%A1Q%E5%80%BC.png" alt="用TD估计Q值.png"></p><ul><li>V(St+1)的意义是，在St+1到最终状态获得的奖励期望值。 </li><li>Q(St,At)的意义是，在Q(St,At)到最终状态获得的奖励期望值。</li></ul><p>在这里要估算两个东西，一个是V值，一个是Q值。人们想到用下一个动作的Q值代替V值。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%94%A8%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%8A%A8%E4%BD%9C%E7%9A%84Q%E4%BB%A3%E6%9B%BFV.png" alt="用下一个动作的Q代替V.png"></p><p>但是，这里就有个坑：<code>虽然从状态St+1到动作At+1之间没有奖励反馈，但还是不能直接用At+1的Q价值，代替St+1的V价值。</code></p><p>因为<code>马尔可夫树!</code><br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E5%9D%91%E7%9A%84%E8%A7%A3%E9%87%8A.png" alt="坑的解释.png"></p><p><code>在St+1下，可能有很多动作At+1。不同动作的Q值自然是不同的。 所以Q(St+1,At+1)并不能等价于V(St+1)。</code></p><p>虽然不相等，但不代表不能用其中一个来代表V(St+1)。人们认为有个可能的动作产生的Q值能够一定程度代表V(St+1)。</p><ol><li>在相同策略下产生的动作At+1。这就是<code>SARSA</code>。</li><li>选择能够产生最大Q值的动作At+1。这就是<code>Qlearning</code>。</li></ol><h3 id="SARSA"><a href="#SARSA" class="headerlink" title="SARSA"></a>SARSA</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/SARSA.png" alt="SARSA.png"></p><p>其实SARSA和上一篇说的TD估算V值几乎一模一样，只不过挪了一下，从V改成Q了。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/SARSA%E5%85%AC%E5%BC%8F.png" alt="SARSA公式.png"><br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/TD(0)%E4%B8%8ESARSA%E5%AF%B9%E6%AF%94.png" alt="TD(0)与SARSA对比.png"></p><p>注意: <code>这里的At+1是在同一策略产生的。也就是说,St选At的策略和St+1选At+1是同一个策略。这也是SARSA和Qlearning的唯一区别。</code></p><h3 id="Qlearning"><a href="#Qlearning" class="headerlink" title="Qlearning"></a>Qlearning</h3><p><code>Qlearning将能够产生最大Q值的动作At+1的Q值作为V(St+1)的替代。</code></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Qlearning%E5%9B%BE%E8%A7%A3.png" alt="Qlearning图解.png"></p><p>理解：因为需要寻着的是能获得最多奖励的动作，Q值就代表能够获得今后奖励的期望值。所以选择Q值最大的，也只有最大Q值能够代表V值。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Qlearning%E5%85%AC%E5%BC%8F.png" alt="Qlearning公式.png"></p><p><code>Q(S,a)的更新目标</code>：在Qlearning，用下一状态St+1的最大Q值替代St+1的V值。V(St+1)加上状态转移产生的奖励R。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/SARSA%E5%85%AC%E5%BC%8F.png" alt="SARSA公式.png"></p><p>Qleanring和SARSA，两者的差别仅仅在Qlearning中多了个max。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>Qlearning和SARSA都是基于TD(0)的。不过在之前的介绍中，用TD(0)估算状态的V值。而Qlearning和SARSA估算的是动作的Q值。 </li><li>Qlearning和SARSA的核心原理，是用下一个状态St+1的V值，估算Q值。 </li><li>既要估算Q值，又要估算V值会显得比较麻烦。所以用下一状态下的某一个动作的Q值，来代表St+1的V值。 </li><li>Qlearning和SARSA唯一的不同，就是用什么动作的Q值替代St+1的V值。 <ul><li>SARSA 选择的是在St同一个策略产生的动作。 </li><li>Qlearning 选择的是能够产生最大的Q值的动作。</li></ul></li></ol><h3 id="Qlearning-实现"><a href="#Qlearning-实现" class="headerlink" title="Qlearning 实现"></a>Qlearning 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="深度神经网络"><a href="#深度神经网络" class="headerlink" title="深度神经网络"></a>深度神经网络</h2><p>深度强化学习：用深度神经网络辅助强化学习。</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>假如知道X，y有关系，那么不妨先设这个关系可以通过函数Magic(X)获得。也就是说Magic(X)&#x3D;y。</p><p>这在手写数字识别中，X就是需要识别的图片，y就是识别出来的数字分类。 我们的任务就是需要求这个Magic函数。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Magic(X).png" alt="Magic(X).png"></p><p>现在假设有另外一个函数Magic’(),这个函数是由深度神经网络构成。</p><p>在刚开始的时候，很明显Magic’(X) 并不等于y，例如输入手写图片8，Magic’()计算后，认为数字8只有20%，但数字9有40%。</p><p>…但这没所谓，因为这是刚开始。我们的任务是让Magic’(X)产生的结果y’ 和 y尽量接近。</p><p>y’和真实y之间的差距，叫损失，也就是loss。有时候也会把y称为目标(target)，因为任务就是让Magic’(X)越来越靠近这个目标。</p><p>衡量loss的方法有很多，定义不同loss对神经网络学习有着重大差别，这个话题太大，我们暂时不展开。</p><p>loss越大，表示和目标差距越远；loss越小，表示和目标越近，当小到一定值，那么就可以认为Magic’(X)和Magic(X)函数非常接近，可以通过Magic’(X)计算出y。</p><p>当有许许多多这样的y，经过许许多多轮后。Magic’就越来越贴近Magic。也就是说X和y之间的关系就能越来越好地表达出来。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Magic'(X).png" alt="Magic&#39;(X).png"></p><h4 id="放大镜下的深度神经网络"><a href="#放大镜下的深度神经网络" class="headerlink" title="放大镜下的深度神经网络"></a>放大镜下的深度神经网络</h4><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%B7%A5%E5%8E%82.png" alt="数据加工厂.png"></p><p>现在可以把深度神经网络的Magic函数，看成是一个数据加工厂。而X就是要进行加工的数据。</p><p>为了让这个数据加工厂运行得更快，通常需要把要加工的数据X变得更<code>标准</code>一些。</p><p>例如图片的尺寸大小，有多少通道的颜色等等，然后<code>分批(batch)</code>，输入工厂。</p><p>在输入工厂的时候，会有一个‘大门’，称为<code>输入层</code>，去检查数据是否已经按照工厂的标准整理好。</p><p>数据工厂里有很多车间，按照流水线排列。和一般的自动化车间一样，需要定义好这个车间的操作标准。</p><p>一般称这些车间叫<code>层</code>。<code>这些层都已经封装好在tensorflow、tensorlayer、pytorch等里面了</code>。常用的层包括：<code>Dense、Conv2D、LSTM、Reshape、Flatten</code>等。</p><p>最终，数据工厂会把原数据X，加工成产品<code>y&#39;(也叫做：logits)</code>。从源数据加工成产品的过程，叫<code>正向传播</code>。</p><p>但产品y’是否是一个合格的产品，我们还需要我们真正的<code>y(lables)</code>作为标准去鉴定。把<code>鉴定出来的差距就是loss</code>。</p><p>工厂根据鉴定结果，以梯度下降的方式，反向传递给每个车间，告诉车间要如何调整各自的参数，让源数据和产出y’能够对应起来。</p><p>经过N个批次（batch）的数据输入，然后鉴别，工厂调整。最后工厂就能达到生产标准了。也就是说magic函数已经被训练好了。</p><h2 id="DQN"><a href="#DQN" class="headerlink" title="DQN"></a>DQN</h2><blockquote><p><code>DQN: TD + 神经网络</code></p></blockquote><p>在Qlearning中，有一个Qtable，记录着在每一个状态下，各个动作的Q值。</p><p>Qtable的作用是当输入状态S，通过查表返回能够获得最大Q值的动作A。也就是需要找一个S-A的对应关系。</p><p>这种方式很适合格子游戏。因为格子游戏中的每一个格子就是一个状态，但在现实生活中，很多状态并不是离散而是连续的。</p><p><code>用神经网络解决Qlearning中动作离散的问题，让动作变成连续的，这就是DQN。</code></p><p><code>Deep network + Qlearning = DQN</code></p><p>神经网络万能函数(神经网络)Magic(X)接受输入一个状态S，它能告诉我，每个动作的Q值是怎样的。</p><h3 id="理解DQN中的神经网络"><a href="#理解DQN中的神经网络" class="headerlink" title="理解DQN中的神经网络"></a>理解DQN中的神经网络</h3><p>Qtable三维可视化：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Qtable%E4%B8%89%E7%BB%B4%E5%8F%AF%E8%A7%86%E5%8C%96.png" alt="Qtable三维可视化.png"></p><p>图中每根柱子的高度，表示状态S下，选择动作A的Q值。</p><p><code>现在用函数来表示，相当于要扭曲一条曲线，这条曲线穿过了离散状态下的所有点。</code></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E6%89%AD%E6%9B%B2%E7%9A%84%E6%9B%B2%E7%BA%BF.png" alt="扭曲的曲线.png"></p><p>从二维状态看：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E4%BA%8C%E7%BB%B4%E6%9B%B2%E7%BA%BF.png" alt="二维曲线.png"></p><p>所以现在不但可以取状态3和状态4，还可以取状态3.5的Q值。</p><p>现在就很清楚了，其实Qlearning和DQN并没有根本的区别。<code>只是DQN用神经网络，也就是一个函数替代了原来Qtable而已。</code></p><h3 id="更新目标"><a href="#更新目标" class="headerlink" title="更新目标"></a>更新目标</h3><p>更新目标就是Magic(X)，最终要向这个Magix(X)靠近。</p><p>在Qlearning，用下一状态St+1的最大Q值替代St+1的V值。V(St+1)加上状态转移产生的奖励R。就是Q(S,a)的更新目标。</p><p>DQN和Qlearning一样：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/DQN.png" alt="DQN.png"><br>假设需要更新当前状态St下的某动作A的Q值：Q(S,A),可以这样做： </p><ol><li>执行A，往前一步，到达St+1; </li><li>把St+1输入Q网络，计算St+1下所有动作的Q值； </li><li>获得最大的Q值加上奖励R作为更新目标； </li><li>计算损失 <ul><li>Q(S,A)相当于有监督学习中的logits</li><li>maxQ(St+1) + R 相当于有监督学习中的lables </li><li>用mse函数，得出两者的loss </li><li>Loss &#x3D; (Q(S, A) - [gamma * maxQ(St+1) + R])^2</li></ul></li><li>用loss更新Q网络。(反向传播)</li></ol><blockquote><p>通常会使用一个折扣因子 gamma 来考虑未来奖励的重要性。折扣因子 gamma 的作用是对未来奖励进行衰减，使得当前时刻的奖励比未来时刻的奖励更具有影响力。</p></blockquote><p>也就是，用Q网络估算出来的两个相邻状态的Q值，他们之间的距离，就是一个r的距离。这个就是更新目标<br><code>Target = R + gamma * maxQ(St+1)</code></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/DQN%E5%85%AC%E5%BC%8F.png" alt="DQN公式.png"></p><p>总结：</p><ol><li>其实DQN就是Qlearning扔掉Qtable，换上深度神经网络。</li><li>解决连续型问题，如果表格不能表示，就用函数，而最好的函数就是深度神经网络。</li><li>和有监督学习不同，深度强化学习中，需要自己找更新目标。通常在马尔科夫链体系下，两个相邻状态状态差一个奖励r经常能够作为更新目标。</li></ol><h3 id="DQN-实现"><a href="#DQN-实现" class="headerlink" title="DQN 实现"></a>DQN 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="Double-DQN"><a href="#Double-DQN" class="headerlink" title="Double DQN"></a>Double DQN</h2><h3 id="经验回放"><a href="#经验回放" class="headerlink" title="经验回放"></a>经验回放</h3><p>经验回放解决了强化学习中的两个问题： <code>训练网络数据采集慢</code> 和 <code>过度拟合</code></p><p>当然这个慢是对比网络训练的速度。在强化学习中，网络训练经过GPU的加速，比起游戏来时快很多的。所以训练的瓶颈一般在智能体跟环境互动的过程中。 如果能把互动过程中的数据，都存起来，当数据最够多的时候，再训练网络，那么就快很多了。</p><p>把每一步的s，选择的a，进入新的状态s’，获得的奖励r，新状态是否为终止状态。都存在一个叫回放缓存的地方(replay buffer)。<br>当智能体与环境互动期间，就会不断产生这样一条一条数据。 数据1： 数据2： 数据3： ….<br>当数据量足够，达到设定一个batch的大小，便从中抽出一个batch大小的数据，把这笔数据一起放入网络进行训练。<br>训练之后继续进行游戏，继续把新产生的数据添加到回放缓存里…<br>就这样每次都随机抽出一个batch大小的数据训练智能体。这样，以前产生的数据同样也能用来训练数据了, 效率自然更高。</p><p>使用经验回放除了使训练更高效，同时也减少了训练产生的过度拟合的问题。<br>过度拟合，放到人身上就是<code>过度依赖局部经验</code>了。<br>就像孩子发现爸爸有胡子，就认为所有男人都有胡子一样。<br>同样，在有监督学习中，如果只给模型看少量的几张图，并且告诉模型这是猫。这样模型就只会从这几张图学习到猫的特点，而更多的猫模型可能就不认得了。我们说这就是过度拟合造成的，导致模型不够健壮。</p><h3 id="DQN的问题"><a href="#DQN的问题" class="headerlink" title="DQN的问题"></a>DQN的问题</h3><p>DQN的目标：<br><code>Target = R + gamma * maxQ(St+1)</code></p><p>目标本身就包含一个Q网络，理论上是没有问题的，但，这样会造成Q网络的学习效率比较低，而且不稳定。</p><p>如果把训练神经网络比喻成射击游戏，在target中有Q网络的话，就相当于在射击一个移动靶，因为每次射击一次，靶就会挪动一次。相比起固定的靶，无疑加上了训练的难度。</p><p>要解决这个问题，就把移动靶弄成是固定的靶，先停止10秒。10后挪动靶再打新的靶。这就是<code>Fixed Q-targets</code>的思路。</p><h3 id="Fixed-Q-targets"><a href="#Fixed-Q-targets" class="headerlink" title="Fixed Q-targets"></a>Fixed Q-targets</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/fix-Q-targets.png" alt="fix-Q-targets.png"></p><p>其他地方和DQN一样，唯一不同是用了两个Q网络。</p><ul><li>原来的Q网络，用于估算Q(s);</li><li>targetQ网络, targetQ自己并不会更新，也就是它在更新的过程中是固定的，用于计算更新目标。<ul><li><code>y = r + gamma * max(targetQ(s&#39;))</code></li><li>进行N次更新后，就把新Q网络的参数赋值给旧Q网络，保持训练的稳定性。</li></ul></li></ul><h3 id="Double-DQN-1"><a href="#Double-DQN-1" class="headerlink" title="Double DQN"></a>Double DQN</h3><p>DQN有一个显著的问题，就是DQN估计的Q值往往会偏大。这是由于Q值是以下一个s’的Q值的最大值来估算的，但下一个state的Q值也是一个估算值，也依赖它的下一个state的Q值…，这就导致了Q值往往会有偏大的的情况出现。</p><p>这个思路也很直观。如果只有一个Q网络，Q值的估计往往偏大。那就用两个Q网络，因为两个Q网络的参数有差别，所以对于同一个动作的评估也会有少许不同。选取评估出来较小的值来计算更新目标。这样就能有效避免Q网络估值偏大的情况发生了。</p><p>另外一种做法也需要用到两个Q网络：Q1网络推荐能够获得最大Q值的动作；Q2网络计算这个动作在Q2网络中的Q值。</p><h3 id="Double-DQN-实现"><a href="#Double-DQN-实现" class="headerlink" title="Double DQN 实现"></a>Double DQN 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="Duel-DQN"><a href="#Duel-DQN" class="headerlink" title="Duel DQN"></a>Duel DQN</h2><h3 id="Dueling-DQN原理"><a href="#Dueling-DQN原理" class="headerlink" title="Dueling DQN原理"></a>Dueling DQN原理</h3><p>回到Qtable， 原来会直接预估Q值表的数据，现在改为需要预估两个值：S值和A值。即<code>Q = S + A</code></p><ul><li>S: 在特定状态下采取任何行动的平均价值,也就是该state下的Q值的平均数。</li><li>A: 在特定状态下采取特定动作相对于采取平均动作的优势。A的平均值为0。</li></ul><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Q=S+A%E8%A1%A8%E6%A0%BC.png" alt="Q=S+A表格.png"></p><p>普通DQN的Q网络，可以理解用一个曲线去拟合Qtable的Q值。现在取一个截面，表示当取某个S下，各个动作的Q值。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E6%99%AE%E9%80%9ADQN.png" alt="普通DQN.png"></p><p>普通DQN在提升某个状态下的S值时，只会提升某个动作。</p><p>Dueling DQN： 在网络更新的时候，由于有A值之和必须为0的限制，所以网络会优先更新S值。S值是Q值的平均数，平均数的调整相当于一次性S下的所有Q值都更新一遍。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/DuelDQN.png" alt="DuelDQN.png"></p><p>如上图，橙色虚线是平均值，也就是S值。 所以网络在更新的时候，不但更新某个动作的Q值，而是把这个状态下，所有动作的Q值都调整一次。这样，就可以在更少的次数让更多的值进行更新。</p><blockquote><p>这样调整最后的数值是对的吗？放心，在DuelingDQN，我们只是优先调整S值。但最终我们的target目标是没有变的，所以我们最后更新出来也是对的。</p></blockquote><h3 id="网络架构"><a href="#网络架构" class="headerlink" title="网络架构"></a>网络架构</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/DuelDQN%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84.png" alt="DuelDQN网络架构.png"></p><p>可以把dueling DQN分为三部分：</p><ul><li>第一部分：和普通DQN一样，用来处理和学习数据。</li><li>第二部分：计算svalue，就是让网络预估的平均值。</li><li>第三部分：计算avalue，和svalue一样，都是从h2层输入到该层。然后对avalue进行归一化处理，也就是增加“A值的平均值为0”的限制。<ul><li>归一化的处理很简单，求A值的平均值，然后用A值减去平均值即可。A-mean(A)</li></ul></li></ul><p>DeulingDQN的实现很简单，只需要修改Q网络的网络架构就可以了。而且可以和其他DQN的技巧，例如经验回放，固定网络，双网络计算目标等可以共用。</p><h3 id="Duel-DQN-实现"><a href="#Duel-DQN-实现" class="headerlink" title="Duel DQN 实现"></a>Duel DQN 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="PG"><a href="#PG" class="headerlink" title="PG"></a>PG</h2><p>策略梯度(Policy Gradient)</p><p>之前的MC、TD、Qlearning、DQN都是基于值的方法，就是一定要算Q值和V值。但事实上我们的最终目的是要找一个策略，能获得最多的奖励。</p><p>这就是<code>策略梯度(Policy Gradient)</code></p><h3 id="PG原理"><a href="#PG原理" class="headerlink" title="PG原理"></a>PG原理</h3><p>认识到：</p><blockquote><p><code>DQN: TD + 神经网络</code><br><code>PG: MC + 神经网络</code></p></blockquote><p>PG中的Magic(state):<br>当输入state的时候，输出pi，告诉智能体这个状态，应该如何应对： &#x3D; magic(state)。如果智能体的动作是对的，那么就让这个动作获得更多被选择的几率；相反，如果这个动作是错的，那么这个动作被选择的几率将会减少。</p><p>复习一下蒙地卡罗：<br>从某个state出发，然后一直走，直到<code>最终状态</code>。然后从最终状态原路返回，对每个状态评估G值。 所以G值能够表示在策略下，智能体选择的这条路径的好坏。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E5%A4%8D%E4%B9%A0MC.png" alt="复习MC.png"></p><h3 id="直观感受PG"><a href="#直观感受PG" class="headerlink" title="直观感受PG"></a>直观感受PG</h3><p>从某个state出发，可以采取三个动作。 假设当前智能体对这一无所知，那么，可能采取平均策略 Pi0 &#x3D; [33%,33%,33%]。智能体出发，选择动作A，到达最终状态后开始回溯，计算得到 G &#x3D; 1。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%9B%B4%E8%A7%82%E6%84%9F%E5%8F%97PG1.png" alt="直观感受PG1.png"></p><p>更新策略，因为该路径选择了A而产生的，并获得G &#x3D; 1；因此要更新策略：让A的概率提升，相对地，BC的概率就会降低。 计算得新策略为： Pi1 &#x3D; [50%,25%,25%]。虽然B概率比较低，但仍然有可能被选中。第二轮刚好选中B。智能体选择了B，到达最终状态后回溯，计算得到 G &#x3D; -1。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%9B%B4%E8%A7%82%E6%84%9F%E5%8F%97PG2.png" alt="直观感受PG2.png"></p><p>此时对B动作的评价比较低，并且希望以后会少点选择B，因此要降低B选择的概率，而相对地，AC的选择将会提高。计算得新策略为： Pi2 &#x3D; [55%,15%,30%]。最后随机到C，回溯计算后，计算得G &#x3D; 5。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%9B%B4%E8%A7%82%E6%84%9F%E5%8F%97PG3.png" alt="直观感受PG3.png"></p><p>C比A还要多得多。因此这一次更新，C的概率需要大幅提升，相对地，AB概率降低。 Pi3 &#x3D; [20%,5%,75%]。</p><h3 id="PG-实现"><a href="#PG-实现" class="headerlink" title="PG 实现"></a>PG 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="AC"><a href="#AC" class="headerlink" title="AC"></a>AC</h2><blockquote><p><code>AC: PG + DQN(TD + 神经网络)</code></p></blockquote><p>PG利用带权重的梯度下降方法更新策略，而获得权重的方法是MC计算G值。MC需要完成整个游戏过程，直到最终状态，才能通过回溯计算G值。这使得PG方法的效率被限制。</p><p>改为TD可以解决上面的问题。接下来又面临另一个问题：<br>在PG，我们需要计算G值；那么在TD中，我们应该怎样估算每一步的Q值呢？答案是用神经网络。</p><p>也就是说，Actor-Critic，其实是用了两个网络：</p><p>两网络都输入状态S，Critic比Actor多一个St+1: </p><ul><li>一个网络输出策略，负责选择动作，把这个网络成为Actor； </li><li>一个网络负责计算每个动作的分数，把这个网络成为Critic。</li></ul><h3 id="TD-error"><a href="#TD-error" class="headerlink" title="TD-error"></a>TD-error</h3><p><code>在DQN预估的是Q值，在AC中的Critic，估算的是V值。</code>不估算Q值是因为效果不好。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E4%BC%B0%E7%AE%97Q.png" alt="为什么不估算Q.png"></p><p>假设用Critic网络，预估到S状态下三个动作A1，A2，A3的Q值分别为1,2,10。 但在开始的时候，采用平均策略，于是随机到A1。于是用策略梯度的带权重方法更新策略，这里的权重就是Q值。于是策略会更倾向于选择A1，意味着更大概率选择A1。结果A1的概率就持续升高…</p><p>这就掉进了正数陷阱。明明希望A3能够获得更多的机会，最后却是A1获得最多的机会。这是为什么呢？<br>因为Q值用于是一个正数，如果权重是一个正数，那么相当于提高对应动作的选择的概率。权重越大，调整的幅度将会越大。其实当有足够的迭代次数，这个是不用担心这个问题的。因为总会有机会抽中到权重更大的动作，因为权重比较大，抽中一次就能提高很高的概率。</p><p>但在强化学习中，往往没有足够的时间去和环境互动。这就会出现由于运气不好，使得一个很好的动作没有被采样到的情况发生。要解决这个问题，可以通过减去一个baseline，令到权重有正有负。而通常这个baseline，选取的是权重的平均值。减去平均值之后，值就变成有正有负了。而<code>Q值的期望(均值)就是V。</code></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/TD-error.png" alt="TD-error.png"></p><p>可以得到更新的权重：<code>Q(s,a)-V(s)</code>，Q(s,a)用<code>gamma * V(s&#39;) + r</code> 代替。<br>得到TD-error：<code>TD-error = gamma * V(s&#39;) + r - V(s)</code></p><p>和之前DQN的更新公式非常像，只不过DQN的更新用了Q，而TD-error用的是V。如果Critic是用来预估V值，而不是原来讨论的Q值。那么，这个TD-error是用来更新Critic的loss了！没错，Critic的任务就是让TD-error尽量小。然后TD-error给Actor做更新。</p><p>至于为啥TD-error是用来更新Critic的loss呢？<br>取TD-error的方差来作为critic的loss，其实类似于DQN中的Q网络，认为下个状态的估算值比目前状态的Q值更精确，所以把下个状态的估算值作为目标，来更新Q网络。此处单看critic网络吗，其目的仅在于预测V值，所以它的估算值也要向更准确的下个阶段估算值来靠近，即TD-error越来越小。<br>再来看actor网络，TD-error在其中的作用仅是更新网络时的权重，其与动作的选择并无直接关系。前期TD-error较大，每次更新时，动作的概率都会进行相对较大的改动，随着不断地训练，动作的概率逐渐成熟，TD-error越来越小，所以每次更新时对动作概率的改动也随之减小。</p><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><ol><li>为了避免正数陷阱，希望Actor的更新权重有正有负。因此，把Q值减去他们的均值V。有：<code>Q(s,a)-V(s)</code></li><li>为了避免需要预估V值和Q值，把Q和V统一；由于<code>Q(s,a) = gamma * V(s&#39;) + r - V(s)</code>。所以我们得到TD-error公式： <code>TD-error = gamma * V(s&#39;) + r - V(s)</code></li><li><code>TD-error就是Actor更新策略时候，带权重更新中的权重值</code>；</li><li>现在Critic不再需要预估Q，而是预估V。而根据马可洛夫链所学，知道TD-error就是Critic网络需要的loss，也就是说，Critic函数需要最小化TD-error。</li></ol><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><ol><li>定义两个network：Actor 和 Critic</li><li>进行N次更新。<ol><li>从状态s开始，执行动作a，得到奖励r，进入状态s’</li><li>记录的数据。</li><li>把输入到Critic，根据公式： TD-error &#x3D; gamma * V(s’) + r - V(s) 求 TD-error，并缩小TD-error</li><li>把输入到Actor，计算策略分布。</li></ol></li></ol><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/AC%E7%AE%97%E6%B3%95.png" alt="AC算法.png"></p><p>可以看出：在PG，智能体需要从头一直跑到尾，直到最终状态才开始进行学习。 在AC，智能体采用是每步更新的方式。</p><h3 id="AC-实现"><a href="#AC-实现" class="headerlink" title="AC 实现"></a>AC 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="PPO"><a href="#PPO" class="headerlink" title="PPO"></a>PPO</h2><p>PPO是基于AC框架的</p><h3 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h3><p>首先要想办法处理连续动作的输出问题。</p><ul><li>离散动作：离散动作就像一个个的按钮，按一个按钮就能智能体就做一个动作。</li><li>连续动作：相当于按钮不但有开关的概念，而且还有力度大小的概念。就像开车，不但是前进后退转弯，并且要控制油门踩多深，刹车踩多少的，转弯时候转向转多少的问题。</li></ul><p>在离散动作空间的问题中，最终输出的策略呈现出下面形式：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%A6%BB%E6%95%A3%E5%8A%A8%E4%BD%9C-%E7%AD%96%E7%95%A5%E5%88%86%E5%B8%83.png" alt="离散动作-策略分布.png"></p><p>假设动作空间有只有action1 和 action2，有40%的概率选择action1 ，60%概率选择action2。即在此状态下的策略分布: pi &#x3D; [0.4, 0.6]。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E8%BF%9E%E7%BB%AD%E5%9E%8B%E6%A6%82%E7%8E%87%E5%88%86%E5%B8%83%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="连续型概率分布示意图.png"></p><p>在连续型，不再用数组表示，而是用函数表示。例如，策略分布函数 ： P &#x3D; （action）代表在策略下，选择某个action的概率P。</p><p>用神经网络预测输出的策略是一个固定的shape，而不是连续的。那又什么办法可以表示连续型的概率呢？可以假定策略分布函数服从一个概率分布，例如正态分布。</p><p>这样，只用两个参数就可以表示了。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83.png" alt="正态分布.png"></p><p>正态分布：</p><ul><li>sigma：表示方差，当sigma越大，图像越扁平；sigma约小，图像越突出。而最大值所在的位置，就是中轴线。</li><li>mu：表示平均数，也就是整个正态分布的中轴线。mu的变化，表示整个图像向左右移动。</li></ul><p>神经网络直接输出mu和sigma，就能获得整个策略的概率密度函数了。现在，当要按概率选择一个动作时，就只需要按照这个概率密度函数，随机抽取一个数，就能得到一个动作了。</p><h3 id="AC的问题"><a href="#AC的问题" class="headerlink" title="AC的问题"></a>AC的问题</h3><p>上面的正态分布解决了AC处理连续状态空间的问题。但是，AC还有一个问题：AC产生的数据，只能进行1次更新，更新完就只能丢掉，等待下一次的数据。</p><ul><li><p>行为策略：行为策略是代理在与环境交互时采取行动的策略。它决定了代理在当前状态下选择每一个可能的行动的概率分布。不是当前策略，用于产出数据。</p></li><li><p>目标策略：目标策略是代理在训练过程中试图优化的策略。它是代理最终想要学习到的最优策略，它通常被设计为最大化期望累积奖励。会更新的策略，是需要被优化的策略。</p></li><li><p>在线策略：在线策略是指在与环境交互时实时地采取行动，并根据实时的反馈来更新策略。也就是说，代理在与环境互动时，采取行动并根据实际结果来调整策略。目标策略和行为策略是同一个策略，那么是在线策略。</p><ul><li>实时更新：在线策略会根据每次与环境交互的结果来进行即时更新。</li><li>依赖实时反馈：在线策略依赖于实时的环境反馈来进行学习和调整。</li></ul></li><li><p>离线策略：离线策略是指在事先收集好的数据集上进行训练，而不需要实时地与环境交互。也就是说，代理使用事先收集的经验数据来训练策略，而不依赖于实时环境反馈。目标策略和行为策略不是同一个策略，那么是离线策略。</p><ul><li>离线数据：训练过程中不需要实时地与环境进行交互，可以使用先前收集的数据。</li><li>无需环境互动：训练过程中不需要实时环境反馈。</li></ul></li></ul><p>例子：<br>如果在智能体和环境进行互动时产生的数据打上一个标记。标记这是第几版本的策略产生的数据,例如 1， 2… 10。现在智能体用的策略 10，需要更新到 11。如果算法只能用 10版本的产生的数据来更新，那么这个就是在线策略；如果算法允许用其他版本的数据来更新，那么就是离线策略。</p><p>例如PG，就是一个在线策略。因为PG用于产生数据的策略（行为策略），和需要更新的策略（目标策略）是一致。 而DQN则是一个离线策略。我们会让智能体在环境互动一定次数，获得数据。用这些数据优化策略后，继续跑新的数据。但老版本的数据仍然是可以用的。也就是说，产生数据的策略，和要更新的目标策略不是同一个策略。所以DQN是一个离线策略。</p><p><strong>为什么PG和AC中的Actor更新策略，不能像DQN一样把数据存起来，只能用一次产生的数据？</strong></p><p>看一个例子：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%AD%96%E7%95%A5P%E5%92%8C%E7%AD%96%E7%95%A5B.png" alt="策略P和策略B.png"></p><blockquote><p>TD-error 可以理解为从状态S 到下一个状态动作的价值，所以动作1的 TD-error 大，所以希望选择动作1的概率大</p></blockquote><p>假设，已知在同一个环境下，有两个动作可以选择。现在两个策略，分别是P和B： P: [0.5,0.5] B: [0.1,0.9]</p><p>现在按照两个策略，进行采样；也就是分别按照这两个策略，以S状态下出发，与环境进行10次互动。获得如图数据。那么，可以用B策略下获得的数据，更新P吗？</p><p>答案是不行，回顾PG算法，<code>PG算法会按照TD-error作为权重，更新策略。权重越大，更新幅度越大；权重越小，更新幅度越小。</code></p><p>但可以从如下示意图看到，如果用行动策略B[0.1,0.9]产出的数据，对目标策略P进行更新，动作1会被更新1次，而动作2会更新9次。虽然动作1的TD-error比较大，但由于动作2更新的次数更多，最终动作2的概率会比动作1的要大。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%AD%96%E7%95%A5P%E5%92%8C%E7%AD%96%E7%95%A5B%E6%9B%B4%E6%96%B0%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="策略P和策略B更新示意图.png"></p><p>这不是期望看到的更新结果，因为动作1的TD-error比动作2要大，希望的是选择概率动作1的能更多。由此可以明白，在策略更新的时候不能使用其他策略产生的数据。</p><p><strong>为什么DQN可以多次重复使用数据？</strong></p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/DQN%E6%9B%B4%E6%96%B0%E7%9A%84%E6%98%AFQ%E5%80%BC.png" alt="DQN更新的是Q值.png"></p><p>两个角度：</p><ul><li>更新Q值，和策略无关。 在同一个动作出发，可能会通往不同的state，但其中的概率是状态转移概率决定的，与环境有关，而不是策略所决定的。所以产生的数据和策略并没有关系。</li><li>在DQN的更新中是有”目标”的。 虽然目标比较飘忽，但每次更新，其实都是尽量向目标靠近。无论更新多少次，最终都会在目标附近徘徊。但PG算法，更新是不断远离原来的策略分布的，所以远离多少、远离的次数比例都必须把握好。</li></ul><blockquote><p>在Actor-Critic (AC) 方法中，Critic 网络更新的是状态值函数（Value Function）V，而不是动作值函数（Q函数）。</p></blockquote><h3 id="重要性采样技术"><a href="#重要性采样技术" class="headerlink" title="重要性采样技术"></a>重要性采样技术</h3><p>在PPO中，如果想使用策略B的数据来更新策略P，那就要把TD-error乘上一个重要性权重(importance weight)。</p><p>在这里<code>IW = P（a）/ B（a）</code></p><p>就是 <code>IW = 目标策略出现动作a的概率 / 行为策略出现a的概率</code>。</p><ul><li>目标策略：要更新的策略。</li><li>行为策略：数据的策略。</li></ul><p>这里是用策略B的数据来更新策略P，所以P是目标策略，B是行为策略。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E9%87%8D%E8%A6%81%E6%80%A7%E6%9D%83%E9%87%8D%E8%A1%A8%E6%A0%BC.png" alt="重要性权重表格.png"></p><p>现在即使用P策略: [0.5,0.5]进行更新，a1提升的概率也会比a2的更多。</p><p>PPO使用重要性采样技术把AC从在线策略变成离线策略。</p><h3 id="N步更新"><a href="#N步更新" class="headerlink" title="N步更新"></a>N步更新</h3><p>之前的TD叫做TD(0)，而N步更新为TD(n)。可以看成TD(0)其实是TD(n)的一种特殊情况。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/TD(N).png" alt="TD(N).png"></p><p>如图，实际上只需要计算最后的V(s’)，根据这个估算的V(s’), 反推经过的所有state的V值。这个其实和PG估算G的过程是一样的，只不过并不需要走到最后，而是中途截断，用网络估算。</p><p><code>V = R + gamma * V(s&#39;)</code></p><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><p>实际上，P策略和B策略差异并不能太大，为了能处理这个问题，有两个做法，PPO1 和 PPO2 。主流是PPO2。</p><ol><li>用AC来解决连续型控制问题。方法是输入mu和sigma，构造一个正态分布来表示策略； </li><li>PPO延展了TD(0)，变成TD(N)的N步更新； </li><li>AC是一个在线算法，但为了增加AC的效率，希望把它变成一个离线策略，这样就可以多次使用数据了。为了解决这个问题，PPO使用了重要性采样。</li></ol><h3 id="PPO-实现"><a href="#PPO-实现" class="headerlink" title="PPO 实现"></a>PPO 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="DDPG"><a href="#DDPG" class="headerlink" title="DDPG"></a>DDPG</h2><p>DDPG，全称是deep deterministic policy gradient，深度确定性策略梯度算法。</p><ul><li>deep: 深度网络。</li><li>policy gradient: PG</li><li>deterministic: 其实DDPG也是解决连续控制型问题的的一个算法，不过和PPO不一样，PPO输出的是一个策略，也就是一个概率分布，而DDPG输出的直接是一个动作。</li></ul><p>DDPG更接近DQN，是用一个actor去弥补DQN不能处理连续控制性问题的缺点。</p><h3 id="回顾DQN"><a href="#回顾DQN" class="headerlink" title="回顾DQN"></a>回顾DQN</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E5%9B%9E%E9%A1%BEDQN.png" alt="回顾DQN.png"></p><p>从公式中也能看出，DQN不能用于连续控制问题原因，是因为maxQ(s’,a’)函数只能处理离散型的。这个就是DDPG中的Actor的功能: 用一个magic函数，直接替代maxQ(s’,a’)的功能。也就是说，期待输入状态s，magic函数返回我们动作action的取值，这个取值能够让q值最大。</p><h3 id="理解DDPG"><a href="#理解DDPG" class="headerlink" title="理解DDPG"></a>理解DDPG</h3><p>DDPG中Critic的功能，像是DQN的深度网络，用一张布去覆盖Qlearning中的Qtable。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%A7%A3DDPG1.png" alt="理解DDPG1.png"></p><p>当把某个state输入到DDPG的Actor中的时候，相当于在这块布上做沿着state所在的位置剪开，会看到这个边缘是一条曲线。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%A7%A3DDPG2.png" alt="理解DDPG2.png"></p><blockquote><p>注意: 这条曲线很像概率分布，但要一定注意，这里并不是策略，也不是PPO和AC中的V值。是在某个状态state下，选择某个动作值的时候，能获得的Q值。</p></blockquote><p>Actor的任务就是在寻找这个曲线的最高点，然后返回能获得这个最高点，也是最大Q值的动作。 所以，DDPG其实并不是PG，并没有做带权重的梯度更新。而是在梯度上升，在寻找最大值。 这也就解释了，为什么DDPG是一个离线策略，但可以多次更新却不用importance sampling。这是因为这个算法就是DQN，和策略没有直接的关系。</p><h3 id="DDPG-1"><a href="#DDPG-1" class="headerlink" title="DDPG"></a>DDPG</h3><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/DDPG1.png" alt="DDPG1.png"></p><p>整理下：</p><h4 id="Critic"><a href="#Critic" class="headerlink" title="Critic"></a>Critic</h4><ol><li>Critic网络的作用是预估Q，虽然它还叫Critic，但和AC中的Critic不一样，这里预估的是Q不是V；</li><li>注意Critic的输入有两个：动作和状态，需要一起输入到Critic中；</li><li>Critic网络的loss其还是和AC一样，用的是TD-error。</li></ol><h4 id="Actor"><a href="#Actor" class="headerlink" title="Actor"></a>Actor</h4><ol><li>和AC不同，Actor输出的是一个动作；</li><li>Actor的功能是，输出一个动作A，这个动作A输入到Critic后，能够获得最大的Q值。</li><li>Actor的更新方式和AC不同，不是用带权重梯度更新，而是用梯度上升。</li></ol><p>和DQN一样，DDPG更新的时候如果更新目标在不断变动，会造成更新困难。所以DDPG和DQN一样，用了固定网络(fix network)技术，就是先冻结住用来求target的网络。在更新之后，再把参数赋值到target网络。</p><p>所以实际做的时候使用了4个网络：actor, critic, Actor_target, cirtic_target。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/DDPG2.png" alt="DDPG2.png"></p><blockquote><p>目标网络只是用在求target的过程中。如果不是求target用的，就不用目标网络。</p></blockquote><h3 id="DDPG-实现"><a href="#DDPG-实现" class="headerlink" title="DDPG 实现"></a>DDPG 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="TD3"><a href="#TD3" class="headerlink" title="TD3"></a>TD3</h2><p>Twin Delayed Deep Deterministic policy gradient algorithm，双延迟深度确定性策略梯度</p><p>TD3是对DDPG的优化，三个重要优化。</p><h3 id="double-network"><a href="#double-network" class="headerlink" title="double network"></a>double network</h3><p>DDPG起源于DQN，DQN有一个众所周知的问题就是Q值会被过高估计。这是因为用argmaxQ(s’)去代替V(s’)，去评估Q(s)。当每一步都这样做的时候，很容易就会出现高估Q值的情况。</p><p>在TD3中，用了两套网络估算Q值，相对较小的那个作为更新的目标。这就是TD3的基本思路。</p><p>回顾DDPG：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/DDPG2.png" alt="DDPG2.png"></p><p>通过Critic网络估算动作的A值。一个Critic的评估可能会较高。所以加一个。</p><p>TD3需要用到6个网络：<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/TD3.png" alt="TD3.png"></p><p>在目标网络中，估算出来的Q值会用min()函数求出较小值。以这个值作为更新的目标。这个目标会更新两个网络 Critic网络_1 和 Critic网络_2。 这两个网络是完全独立，他们只是都用同一个目标进行更新。 剩余的就和DDPG一样了。过一段时间，把学习好的网络赋值给目标网络。</p><h4 id="Critic部分的学习"><a href="#Critic部分的学习" class="headerlink" title="Critic部分的学习"></a>Critic部分的学习</h4><p>只有在计算Critic的更新目标时，才用target network。其中就包括了一个Policy network，用于计算A’；两个critic target Q network ,用于计算两个Q值：Q1(A’) 和Q2(A’)。</p><p>Q1(A’) 和Q2(A’) 取最小值 min(Q1,Q2) 将代替DDPG的 Q(a’) 计算更新目标，也就是说： target &#x3D; min(Q1,Q2) * gamma + r</p><p>target 将会是 Q_network_1 和 Q_network_2 两个网络的更新目标。</p><p><code>TD-error_1 = gamma * min(Q1,Q2) + r - Q1</code><br><code>TD-error_2 = gamma * min(Q1,Q2) + r - Q2</code></p><p>既然更新目标是一样的，那么为什么还需要两个网络呢?</p><p>虽然更新目标一样，两个网络会越来越趋近与和实际q值相同。但由于网络参数的初始值不一样，会导致计算出来的值有所不同。所以可以有空间选择较小的值去估算q值，避免q值被高估。</p><h4 id="Actor部分的学习"><a href="#Actor部分的学习" class="headerlink" title="Actor部分的学习"></a>Actor部分的学习</h4><p>DDPG网络图像上就可以想象成一张布，覆盖在qtable上。当输入某个状态的时候，相当于这块布上的一个截面，能够看到在这个状态下的一条曲线。</p><p>而actor的任务，就是用梯度上升的方法，寻着这条线的最高点。</p><p>对于actor来说，其实并不在乎Q值是否会被高估，他的任务只是不断做梯度上升，寻找这条最大的Q值。随着更新的进行Q1和Q2两个网络，将会变得越来越像。所以用Q1还是Q2，还是两者都用，对于actor的问题不大。</p><h3 id="actor延迟更新"><a href="#actor延迟更新" class="headerlink" title="actor延迟更新"></a>actor延迟更新</h3><p>actor更新的delay，也就是说相对于critic可以更新多次后，actor再进行更新。</p><p>为什么要这样做呢？</p><p>回到qnet拟合出来的那块”布”上。 qnet在学习过程中，的q值是不断变化的，也就是说这块布是不断变形的。所以要寻着最高点的任务有时候就挺难为的actor了。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%A7%A3DDPG1.png" alt="理解DDPG1.png"><br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%A7%A3DDPG2.png" alt="理解DDPG2.png"></p><p>可以想象，本来是最高点的，当actor好不容易去到最高点；q值更新了，这并不是最高点。这时候actor只能转头再继续寻找新的最高点。更坏的情况可能是actor被困在次高点，没有找到正确的最高点。</p><p>所以可以把Critic的更新频率，调的比Actor要高一点。让critic更加确定，actor再行动。</p><h3 id="target网络噪声"><a href="#target网络噪声" class="headerlink" title="target网络噪声"></a>target网络噪声</h3><p>TD3中，价值函数的更新目标每次都在action上加一个小扰动，这个操作就是target policy smoothing regularization</p><p>为什么要这样呢？</p><p>回到关于“布”的想象。 在DDPG中，计算target的时候，输入时s_和a_，获得q，也就是这块布上的一点A。通过估算target估算另外一点s，a，也就是布上的另外一点B的Q值。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Q'%E4%BC%B0%E7%AE%97Q%201.png" alt="Q&#39;估算Q 1.png"></p><p>在TD3中，计算target时候，输入s_到actor输出a后，给a加上噪音，让a在一定范围内随机。这又什么好处呢。</p><p>好处就是，当更新多次的时候，就相当于用A点附近的一小部分范围（准确来说是在s_这条线上的一定范围）的去估算B，这样可以让B点的估计更准确，更健壮。<br><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/Q'%E4%BC%B0%E8%AE%A1Q%202.png" alt="Q&#39;估计Q 2.png"></p><p>这里注意三个地方：</p><ol><li>在实验中，同样加上了了noise。这个时候的noise是为了更充分地开发整个游戏空间。</li><li>计算target的时候，actor加上noise，是为了预估更准确，网络更有健壮性。</li><li>更新actor的时候，不需要加上noise，这里是希望actor能够寻着最大值。加上noise并没有任何意义。</li></ol><h3 id="TD3-实现"><a href="#TD3-实现" class="headerlink" title="TD3 实现"></a>TD3 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><p>这里的TD3仅针对自己的实验平台实现了类似于MATD3的效果，但是实际上，没有明确的MATD3。后面再考虑在gym上实现以加深理解。</p><h2 id="A3C"><a href="#A3C" class="headerlink" title="A3C"></a>A3C</h2><p>强化学习的一个难点，智能体的用于学习的数据，需要智能体和环境不断进行交互。和一般有监督学习的先比，数据数量太少了。</p><p>在算法没有更大进步的时候，有人就想出，如果有多个智能体和环境进行互动，那么每个智能体都能产出数据，这些数据就可以一起给模型进行学习了。</p><p>由此诞生了A3C。</p><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/A3C.png" alt="A3C.png"></p><p>注意几点：</p><ol><li>在A3C中，worker不仅要和环境互动，产生数据，而且要自己从这些数据里面学习到“心得”。这里的所谓新的，其实就是计算出来的梯度；需要强调的是，worker向全局网络汇总的是梯度，而不是自己探索出来的数据。<blockquote><p>在这一点上，很容易和DPPO混淆。DPPO和A3C，也是一个分布式的架构，但work自己并不学习，而是提交数据让全局网络学习。</p></blockquote></li><li>worker向全局网络汇总梯度之后，并应用在全局网络的参数后，全局网络会把当前学习到的最新版本的参数，直接给worker。worker按照最新的网络继续跟环境做互动。互动后，再把梯度提交，获取新的参数…… 如此循环。</li></ol><p><img src="/../image/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/A3C1.png" alt="A3C1.png"></p><h3 id="A3C-实现"><a href="#A3C-实现" class="headerlink" title="A3C 实现"></a>A3C 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="DPPO"><a href="#DPPO" class="headerlink" title="DPPO"></a>DPPO</h2><p>DPPO和A3C的思路其实是一致的，希望用多个智能体同时和环境互动，并对全局的PPO网络进行更新。</p><p>在A3C，需要跑数据并且计算好梯度，再更新全局网络。这是因为AC是一个在线的算法，所以在更新的时候，产生数据的策略和更新的策略需要时同一个网络。所以不能把worker产出的数据，直接给全局网络计算梯度用。</p><p>但PPO解决了离线更新策略的问题，所以DPPO的工人只需要提供数据给全局网络，由全局网络从数据中直接学习。</p><h3 id="DPPO-实现"><a href="#DPPO-实现" class="headerlink" title="DPPO 实现"></a>DPPO 实现</h3><p>TODO: 这里所有算法的代码仅仅是看了一遍，还没有自己手写一遍，等这周联合组会后再说。</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>到这里，传统强化学习的总结就结束了，后面由于我的科研方向是<code>多智能体强化学习</code>，会更新关于多智能体强化学习的算法。</p>]]></content>
      
      
      <categories>
          
          <category> 强化学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 强化学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react技巧</title>
      <link href="/posts/56292.html"/>
      <url>/posts/56292.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>主要是对开源项目中react-native的一些使用技巧进行总结。具体项目见：<a href="https://github.com/cwp0/casdoor-app">casdoor-app</a></p></blockquote><blockquote><p>后面如果做react的话可能也会做一些总结，到时候再加。</p></blockquote><h1 id="react-native"><a href="#react-native" class="headerlink" title="react-native"></a>react-native</h1><h2 id="React-Context"><a href="#React-Context" class="headerlink" title="React Context"></a>React Context</h2><p>用于在不同的组件中或者 <code>js</code> 文件中共享同一个数据。</p><p>使用方法：</p><p>例如要共享 <code>userInfo</code></p><ol><li><p>在应用程序中创建一个 <code>React Context</code>，用于共享 <code>userInfo</code>。</p><p><code>UserContext.js</code></p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UserContext</span> = <span class="title class_">React</span>.<span class="title function_">createContext</span>();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">UserProvider</span> = <span class="title class_">UserContext</span>.<span class="property">Provider</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">UserConsumer</span> = <span class="title class_">UserContext</span>.<span class="property">Consumer</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">UserContext</span>;</span><br></pre></td></tr></table></figure></li><li><p>在 <code>App.js</code> 中使用 <strong><code>UserProvider</code></strong> 包裹应用程序</p><p>注意这里要设置需要共享的数据 <code>value=&#123;&#123;userInfo, setUserInfo&#125;&#125;</code></p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">PaperProvider</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-native-paper&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NavigationBar</span> <span class="keyword">from</span> <span class="string">&quot;./NavigationBar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">NavigationContainer</span>&#125; <span class="keyword">from</span> <span class="string">&quot;@react-navigation/native&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Header</span> <span class="keyword">from</span> <span class="string">&quot;./Header&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">UserProvider</span>&#125; <span class="keyword">from</span> <span class="string">&quot;./UserContext&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [userInfo, setUserInfo] = <span class="title class_">React</span>.<span class="title function_">useState</span>(<span class="literal">null</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">UserProvider</span> <span class="attr">value</span>=<span class="string">&#123;&#123;userInfo,</span> <span class="attr">setUserInfo</span>&#125;&#125; &gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">NavigationContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">PaperProvider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Header</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">NavigationBar</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">PaperProvider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">NavigationContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">UserProvider</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure></li><li><p>在其他组件中，通过导入 <code>UserContext.js</code> 进行使用共享的数据。</p><p>注意：声明新的 <code>React.useContext</code>的时候需要用花括号。</p><p><code>Header.js</code></p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Appbar</span>, <span class="title class_">Avatar</span>, <span class="title class_">Button</span>, <span class="title class_">Menu</span>, <span class="title class_">Text</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-native-paper&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UserContext</span> <span class="keyword">from</span> <span class="string">&quot;./UserContext&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">View</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-native&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CasdoorLoginPage</span>, &#123;<span class="title class_">CasdoorLogout</span>&#125; <span class="keyword">from</span> <span class="string">&quot;./CasdoorLoginPage&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Header</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;userInfo, setUserInfo&#125; = <span class="title class_">React</span>.<span class="title function_">useContext</span>(<span class="title class_">UserContext</span>);</span><br><span class="line">  <span class="keyword">const</span> [showLoginPage, setShowLoginPage] = <span class="title class_">React</span>.<span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> [menuVisible, setMenuVisible] = <span class="title class_">React</span>.<span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">openMenu</span> = (<span class="params"></span>) =&gt; <span class="title function_">setMenuVisible</span>(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">closeMenu</span> = (<span class="params"></span>) =&gt; <span class="title function_">setMenuVisible</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleMenuLogoutClicked</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">handleCasdoorLogout</span>();</span><br><span class="line">    <span class="title function_">closeMenu</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleCasdoorLogin</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setShowLoginPage</span>(<span class="literal">true</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleCasdoorLogout</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title class_">CasdoorLogout</span>();</span><br><span class="line">    <span class="title function_">setUserInfo</span>(<span class="literal">null</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleHideLoginPage</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setShowLoginPage</span>(<span class="literal">false</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Appbar.Header</span> <span class="attr">style</span>=<span class="string">&#123;&#123;height:</span> <span class="attr">40</span>&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Appbar.Content</span> <span class="attr">title</span>=<span class="string">&quot;Casdoor&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Menu</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">visible</span>=<span class="string">&#123;menuVisible&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">anchor</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &lt;<span class="attr">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">style</span>=<span class="string">&#123;&#123;marginRight:</span> <span class="attr">10</span>, <span class="attr">backgroundColor:</span> &quot;<span class="attr">transparent</span>&quot;, <span class="attr">height:</span> <span class="attr">40</span>&#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onPress</span>=<span class="string">&#123;userInfo</span> === <span class="string">null</span> ? <span class="attr">handleCasdoorLogin</span> <span class="attr">:</span> <span class="attr">openMenu</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;</span></span><br><span class="line"><span class="language-xml">                userInfo === null ?</span></span><br><span class="line"><span class="language-xml">                  null :</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">Avatar.Image</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">size</span>=<span class="string">&#123;32&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">source</span>=<span class="string">&#123;&#123;uri:</span> <span class="attr">userInfo.avatar</span>&#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">style</span>=<span class="string">&#123;&#123;marginRight:</span> <span class="attr">10</span>, <span class="attr">backgroundColor:</span> &quot;<span class="attr">transparent</span>&quot;&#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  /&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#125;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Text</span> <span class="attr">style</span>=<span class="string">&#123;&#123;marginRight:</span> <span class="attr">10</span>&#125;&#125; <span class="attr">variant</span>=<span class="string">&quot;titleMedium&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                &#123;userInfo === null ? &quot;Login&quot; : userInfo.name&#125;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#125;</span></span><br><span class="line"><span class="language-xml">          onDismiss=&#123;closeMenu&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Menu.Item</span> <span class="attr">onPress</span>=<span class="string">&#123;()</span> =&gt;</span> handleMenuLogoutClicked()&#125; title=&quot;Logout&quot; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Menu</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Appbar.Header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;showLoginPage &amp;&amp; <span class="tag">&lt;<span class="name">CasdoorLoginPage</span> <span class="attr">onWebviewClose</span>=<span class="string">&#123;handleHideLoginPage&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Header</span>;</span><br></pre></td></tr></table></figure></li></ol><h2 id="子组件使用父组件的函数等参数"><a href="#子组件使用父组件的函数等参数" class="headerlink" title="子组件使用父组件的函数等参数"></a>子组件使用父组件的函数等参数</h2><p>在父组件中：</p><p>定义好相关函数及变量，将参数传递给子组件。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [placeholder, setPlaceholder] = <span class="title class_">React</span>.<span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">closeEditAccountModal</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setShowEditAccountModal</span>(<span class="literal">false</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onAccountEdit</span> = (<span class="params">accountDescp</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> accountToEdit = accountList.<span class="title function_">find</span>(<span class="function"><span class="params">account</span> =&gt;</span> account.<span class="title function_">getEditStatus</span>() === <span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">if</span> (accountToEdit) &#123;</span><br><span class="line">      accountToEdit.<span class="title function_">setTitle</span>(accountDescp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">setPlaceholder</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="title function_">closeEditAccountModal</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="title class_">EditAccountDetails</span> onClose=&#123;closeEditAccountModal&#125; onEdit=&#123;onAccountEdit&#125; placeholder=&#123;placeholder&#125; /&gt;</span><br></pre></td></tr></table></figure><p>在子组件中：</p><p>添加相关代码，将父组件的函数等参数接收过来，然后就可以使用父组件的相关参数了。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123;useState&#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Text</span>, <span class="title class_">TextInput</span>, <span class="title class_">View</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-native&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Button</span>, <span class="title class_">IconButton</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-native-paper&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">EnterAccountDetails</span>(<span class="params">&#123;onClose, onEdit, placeholder&#125;</span>) &#123;</span><br><span class="line">  <span class="title class_">EnterAccountDetails</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">    <span class="attr">onClose</span>: <span class="title class_">PropTypes</span>.<span class="property">func</span>.<span class="property">isRequired</span>,</span><br><span class="line">    <span class="attr">onEdit</span>: <span class="title class_">PropTypes</span>.<span class="property">func</span>.<span class="property">isRequired</span>,</span><br><span class="line">    <span class="attr">placeholder</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>.<span class="property">isRequired</span>,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [description, setDescription] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleConfirm</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">onEdit</span>(description);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;flex:</span> <span class="attr">1</span>, <span class="attr">justifyContent:</span> &quot;<span class="attr">center</span>&quot;, <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span> <span class="attr">style</span>=<span class="string">&#123;&#123;fontSize:</span> <span class="attr">24</span>, <span class="attr">marginBottom:</span> <span class="attr">5</span>&#125;&#125;&gt;</span>Enter new description<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;flexDirection:</span> &quot;<span class="attr">row</span>&quot;, <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">IconButton</span> <span class="attr">icon</span>=<span class="string">&quot;account-details&quot;</span> <span class="attr">size</span>=<span class="string">&#123;35&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">TextInput</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;description&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChangeText</span>=<span class="string">&#123;(text)</span> =&gt;</span> setDescription(text)&#125;</span></span><br><span class="line"><span class="language-xml">          style=&#123;&#123;borderWidth: 3, borderColor: &quot;white&quot;, margin: 10, width: 230, height: 50, borderRadius: 5, fontSize: 18, color: &quot;gray&quot;, paddingLeft: 10&#125;&#125;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">backgroundColor:</span> &quot;#<span class="attr">E6DFF3</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">borderRadius:</span> <span class="attr">5</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin:</span> <span class="attr">10</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">position:</span> &quot;<span class="attr">absolute</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">top:</span> <span class="attr">160</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">width:</span> <span class="attr">300</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onPress</span>=<span class="string">&#123;handleConfirm&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Text</span> <span class="attr">style</span>=<span class="string">&#123;&#123;fontSize:</span> <span class="attr">18</span>, <span class="attr">width:</span> <span class="attr">280</span>&#125;&#125;&gt;</span>Confirm<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">IconButton</span> <span class="attr">icon</span>=<span class="string">&#123;</span>&quot;<span class="attr">close</span>&quot;&#125; <span class="attr">size</span>=<span class="string">&#123;30&#125;</span> <span class="attr">onPress</span>=<span class="string">&#123;onClose&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;position:</span> &quot;<span class="attr">absolute</span>&quot;, <span class="attr">top:</span> <span class="attr">5</span>, <span class="attr">right:</span> <span class="attr">5</span>&#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="父组件使用自组件的函数等参数"><a href="#父组件使用自组件的函数等参数" class="headerlink" title="父组件使用自组件的函数等参数"></a>父组件使用自组件的函数等参数</h2><p>在子组件中：</p><p>将父组件要使用的函数导出：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123;useEffect&#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">WebView</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-native-webview&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">View</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-native&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Portal</span>&#125; <span class="keyword">from</span> <span class="string">&quot;react-native-paper&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CasdoorSdkConfig</span> <span class="keyword">from</span> <span class="string">&quot;./CasdoorSdkConfig&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="variable constant_">SDK</span> <span class="keyword">from</span> <span class="string">&quot;casdoor-react-native-sdk&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UserContext</span> <span class="keyword">from</span> <span class="string">&quot;./UserContext&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="comment">// import &#123;LogBox&#125; from &quot;react-native&quot;;</span></span><br><span class="line"><span class="comment">// LogBox.ignoreAllLogs();</span></span><br><span class="line"><span class="keyword">const</span> sdk = <span class="keyword">new</span> <span class="title function_">SDK</span>(<span class="title class_">CasdoorSdkConfig</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">CasdoorLoginPage</span> = (<span class="params">&#123;onWebviewClose&#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="title class_">CasdoorLoginPage</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">    <span class="attr">onWebviewClose</span>: <span class="title class_">PropTypes</span>.<span class="property">func</span>.<span class="property">isRequired</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">const</span> [casdoorLoginURL, setCasdoorLoginURL] = <span class="title class_">React</span>.<span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> &#123;setUserInfo&#125; = <span class="title class_">React</span>.<span class="title function_">useContext</span>(<span class="title class_">UserContext</span>);</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getCasdoorSignInUrl</span> = <span class="keyword">async</span>(<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> signinUrl = <span class="keyword">await</span> sdk.<span class="title function_">getSigninUrl</span>();</span><br><span class="line">    <span class="title function_">setCasdoorLoginURL</span>(signinUrl);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">getCasdoorSignInUrl</span>();</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onNavigationStateChange</span> = <span class="keyword">async</span>(<span class="params">navState</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (navState.<span class="property">url</span>.<span class="title function_">startsWith</span>(<span class="title class_">CasdoorSdkConfig</span>.<span class="property">redirectPath</span>)) &#123;</span><br><span class="line">      <span class="title function_">onWebviewClose</span>();</span><br><span class="line">      <span class="keyword">const</span> token = <span class="keyword">await</span> sdk.<span class="title function_">getAccessToken</span>(navState.<span class="property">url</span>);</span><br><span class="line">      <span class="keyword">const</span> userInfo = sdk.<span class="title class_">JwtDecode</span>(token);</span><br><span class="line">      <span class="title function_">setUserInfo</span>(userInfo);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Portal</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;flex:</span> <span class="attr">1</span>&#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;casdoorLoginURL !== &quot;&quot; &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">WebView</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">source</span>=<span class="string">&#123;&#123;uri:</span> <span class="attr">casdoorLoginURL</span>&#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onNavigationStateChange</span>=<span class="string">&#123;onNavigationStateChange&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&#123;&#123;flex:</span> <span class="attr">1</span>&#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">mixedContentMode</span>=<span class="string">&quot;always&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">javaScriptEnabled</span>=<span class="string">&#123;true&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Portal</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CasdoorLogout</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  sdk.<span class="title function_">clearState</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">CasdoorLoginPage</span>;</span><br></pre></td></tr></table></figure><p>在父组件中：</p><p>导入子组件及其导出的函数，注意导出的方式，导出的组件直接 <code>import</code> ，导出的组件的函数要使用花括号来包裹。</p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 移动端 </tag>
            
            <tag> 前端 </tag>
            
            <tag> react </tag>
            
            <tag> react-native </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云笔记系统扩容</title>
      <link href="/posts/36313.html"/>
      <url>/posts/36313.html</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>之前部署的云笔记系统的存储卷太小了，当用户数量增加的时候，笔记及用户信息会增大，这有可能会引起内存爆掉的情况。存储用户信息的 <code>mysql</code>和存储笔记信息的 <code>mongodb</code>在部署的时候我都设置了 <code>1G</code>的存储卷，这是远远不够的，因此需对其进行扩容。</p><p>根据老师要求，需将内存从 <code>1G</code>扩展到  <code>50G</code>，这是针对存笔记系统的 <code>mongodb</code>，为了更加稳妥，跟学弟协商后决定将存用户数据的 <code>mysql</code>也扩充到 <code>10G</code>。</p><h3 id="大体思路："><a href="#大体思路：" class="headerlink" title="大体思路："></a>大体思路：</h3><ol><li>确定 <code>mongodb</code>和 <code>mysql</code>的 <code>pod</code>所在的 <code>node</code>节点。</li><li>备份数据</li><li>删除旧的 <code>pod</code></li><li>分别修改 <code>mongodb</code>和 <code>mysql</code>的 <code>pv</code>、 <code>pvc</code>为 <code>50Gi</code>、 <code>10Gi</code>。</li><li>指定 <code>mongodb</code>和 <code>mysql</code>的 <code>pv</code>、 <code>pvc</code>及 <code>mongodb</code>、 <code>mysql</code>部署的亲和性，让其部署在指定 <code>node</code>节点，便于扩容。</li><li>重新部署相应 <code>pod</code></li><li>扩容指定的 <code>mongodb</code>、 <code>mysql</code>部署的节点的虚拟机。</li></ol><blockquote><p>注：本笔记图片里的 <code>deployment</code>的编号等信息可能会不一样，因为自己操作的时候可能会删了pod在重建导致其编号及时间等不一样，图片仅用于描述过程及结果。</p></blockquote><h2 id="1-确定pod所在的node节点"><a href="#1-确定pod所在的node节点" class="headerlink" title="1. 确定pod所在的node节点"></a>1. 确定pod所在的node节点</h2><p>首先远程连接 <code>131</code>服务器。</p><p>云笔记系统有 <code>6</code>个 <code>pod</code>，在 <code>note</code>空间里，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n note</span><br></pre></td></tr></table></figure><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/pod.png" alt="pod"></p><p>需确定 <code>mongodb</code>、 <code>mysql</code>所在的 <code>node</code>节点，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n note -o wide</span><br></pre></td></tr></table></figure><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/pod-node.png" alt="pod-node"></p><p>由上图可知， <code>mongodb</code>和 <code>mysql</code>的 <code>pod</code>分别被部署到了 <code>k8s-node6</code>、 <code>k8s-node7</code>节点。</p><h2 id="2-备份数据"><a href="#2-备份数据" class="headerlink" title="2. 备份数据"></a>2. 备份数据</h2><p>问学长得知， <code>k8s-node6</code>、 <code>k8s-node7</code>节点位于 <code>122</code>服务器</p><p>远程连接 <code>122</code>服务器后，打开 <code>VMWare Workstation Pro</code>，登录 <code>node6</code>节点：</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/vmware.png" alt="vmware"></p><p>账号密码为 <code>root 123456</code>，登陆后如下：</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/login.png" alt="login"></p><p>按下面命令将数据拷贝到 <code>tmp/backup</code>文件夹下进行备份：</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/backup.png" alt="backup"></p><p>对 <code>node7</code>下的 <code>mysql</code>进行同样操作，不再赘述。</p><p>为了保险起见，使用 <code>xShell</code>中的 <code>xftp</code>将备份的文件再备份到桌面一份：</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/xftp.png" alt="xftp"></p><p>打开 <code>xshell</code>点击新建文件传输，将 <code>/home</code>下的 <code>mongodb</code>文件夹拖动到桌面。</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/backup-desktop.png" alt="backup-desktop"></p><p>对 <code>node7</code>下的 <code>mysql</code>进行同样操作，不再赘述。</p><h2 id="3-删除旧的pod"><a href="#3-删除旧的pod" class="headerlink" title="3. 删除旧的pod"></a>3. 删除旧的pod</h2><p>删除旧的 <code>pod</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">kubectl</span> <span class="string">delete</span> <span class="string">-f</span> <span class="string">note-mysql-pvc.yaml</span> <span class="string">-n</span> <span class="string">note</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">delete</span> <span class="string">-f</span> <span class="string">note-mysql.yaml</span> <span class="string">-n</span> <span class="string">note</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">delete</span> <span class="string">-f</span> <span class="string">note-mongodb-pvc.yaml</span> <span class="string">-n</span> <span class="string">note</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">delete</span> <span class="string">-f</span> <span class="string">note-mongodb.yaml</span> <span class="string">-n</span> <span class="string">note</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/delete-pod.png" alt="delete-pod"></p><p>此时查看 <code>pod</code>结果：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">kubectl</span> <span class="string">get</span> <span class="string">pod</span> <span class="string">-n</span> <span class="string">note</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/pod-after-deleted.png" alt="pod-after-deleted"></p><p><code>mongodb</code>和 <code>mysql</code>的 <code>pod</code>已经被删掉。</p><h2 id="4-修改pv、pvc"><a href="#4-修改pv、pvc" class="headerlink" title="4. 修改pv、pvc"></a>4. 修改pv、pvc</h2><p>将相关的 <code>yaml</code>文件修改为如下内容：</p><p><code>note-mongodb-pvc.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">50Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/home/mongodb/data</span> <span class="comment"># 主机上的数据存储路径</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">50Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">volumeName:</span> <span class="string">note-mongodb-pv</span></span><br></pre></td></tr></table></figure><p><code>note-mysql-pvc.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/home/mysql/data</span> <span class="comment"># 主机上的数据存储路径</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">volumeName:</span> <span class="string">note-mysql-pv</span></span><br></pre></td></tr></table></figure><p><code>yaml</code>文件里已经将内存修改为目标内存。</p><h2 id="5-指定亲和性"><a href="#5-指定亲和性" class="headerlink" title="5. 指定亲和性"></a>5. 指定亲和性</h2><p>这里的亲和性是 <code>Affinity</code>，指定了这个后会让其部署在指定标签的 <code>node</code>节点上。这样仅需将指定的 <code>node</code>节点的虚拟机扩容即可。</p><p>首先需要为 <code>node</code>节点添加标签。如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes --show-labels</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为节点6和7添加label</span></span><br><span class="line">kubectl label nodes k8s-node6 notelabel=mongodb</span><br><span class="line">kubectl label nodes k8s-node7 notelabel=mysql</span><br></pre></td></tr></table></figure><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/add-labels.png" alt="add-labels"></p><p>指定完标签就可以添加亲和性了，如下：</p><p><code>note-mongodb-pvc.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">50Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/home/mongodb/data</span> <span class="comment"># 主机上的数据存储路径</span></span><br><span class="line">  <span class="attr">nodeAffinity:</span></span><br><span class="line">    <span class="attr">required:</span></span><br><span class="line">      <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">notelabel</span></span><br><span class="line">          <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">          <span class="attr">values:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">mongodb</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">50Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">volumeName:</span> <span class="string">note-mongodb-pv</span></span><br></pre></td></tr></table></figure><p><code>note-mysql-pvc.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/home/mysql/data</span> <span class="comment"># 主机上的数据存储路径</span></span><br><span class="line">  <span class="attr">nodeAffinity:</span></span><br><span class="line">    <span class="attr">required:</span></span><br><span class="line">      <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">notelabel</span></span><br><span class="line">          <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">          <span class="attr">values:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">volumeName:</span> <span class="string">note-mysql-pv</span></span><br></pre></td></tr></table></figure><p><code>note-mongodb.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">note-mongodb-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">note-mongodb-pod</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">notelabel</span></span><br><span class="line">                <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                <span class="attr">values:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">mongodb</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mongodb</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lucas-njfu/note-mongodb:v1.1.0</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">27017</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MONGO_INITDB_ROOT_USERNAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">admin</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MONGO_INITDB_ROOT_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">5c8b18289f7848e9b0af98e81562649d</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mongodb-persistent-storage</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/data/db</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mongodb-persistent-storage</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">note-mongodb-pvc</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">note-mongodb-pod</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> <span class="comment"># service类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30017</span> <span class="comment"># 指定绑定的node的端口(默认的取值范围是：30000-32767),如果不指定，会默认分配</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">27017</span></span><br></pre></td></tr></table></figure><p><code>note-mysql.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">note-mysql-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">note-mysql-pod</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">nodeAffinity:</span></span><br><span class="line">          <span class="attr">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">            <span class="attr">nodeSelectorTerms:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">matchExpressions:</span></span><br><span class="line">              <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">notelabel</span></span><br><span class="line">                <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                <span class="attr">values:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mysql</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lucas-njfu/note_mysql:v1.1.0</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">dfa6f1b032ee42ed95d12647225f2ff4</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mysql-persistent-storage</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mysql-persistent-storage</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">note-mysql-pvc</span> <span class="comment"># 使用之前创建的持久卷声明</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">note-mysql-pod</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> <span class="comment"># service类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30006</span> <span class="comment"># 指定绑定的node的端口(默认的取值范围是：30000-32767), 如果不指定，会默认分配</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3306</span></span><br></pre></td></tr></table></figure><p>这样，亲和性就修改完毕了。</p><h2 id="6-重新部署相应的pod"><a href="#6-重新部署相应的pod" class="headerlink" title="6. 重新部署相应的pod"></a>6. 重新部署相应的pod</h2><p>接下来按 <code>5. 指定亲和性</code> 所修改的 <code>yaml</code>重新进行 <code>pod</code>部署：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">note-mysql-pvc.yaml</span> <span class="string">-n</span> <span class="string">note</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">note-mysql.yaml</span> <span class="string">-n</span> <span class="string">note</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">note-mongodb-pvc.yaml</span> <span class="string">-n</span> <span class="string">note</span></span><br><span class="line"><span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">note-mongodb.yaml</span> <span class="string">-n</span> <span class="string">note</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/pod-deploy.png" alt="pod-deploy"></p><p>查看部署的结果：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">kubectl</span> <span class="string">get</span> <span class="string">pod</span> <span class="string">-n</span> <span class="string">note</span> <span class="string">-o</span> <span class="string">wide</span></span><br></pre></td></tr></table></figure><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/pod-after-deploy.png" alt="pod-after-deploy"></p><p>可以看到已经将 <code>mongodb</code>和 <code>mysql</code>分别部署到了节点 <code>6</code>和 <code>7</code>上。</p><h2 id="7-扩容节点的虚拟机"><a href="#7-扩容节点的虚拟机" class="headerlink" title="7. 扩容节点的虚拟机"></a>7. 扩容节点的虚拟机</h2><p>远程连接 <code>122</code>服务器后，打开 <code>VMWare Workstation Pro</code>，如下：</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/vmware.png" alt="vmware"></p><p>对于 <code>sx-k8s-node6</code>，先双击，然后点击上面的橙色运行按钮右边的下拉倒三角，关机。</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/shutdown.png" alt="shutdown"></p><p>然后右键 <code>sx-k8s-node6</code>，点设置</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/setting.png" alt="setting"></p><p>点击硬盘后点击右下角扩展</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/expand.png" alt="expand"></p><p>对硬盘容量进行修改。</p><p>这里原本是 <code>40G</code>，我增加了 <code>50G</code>后变为了 <code>90G</code>。</p><p><code>sx-k8s-node7</code>的操作类似，不再赘述。</p><p>此时打开网址，访问成功！扩容成功！</p><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>访问（连校园网，关梯子）：</p><p><a href="http://192.10.84.209:33395/cloudNote/">http://192.10.84.209:33395/cloudNote/</a></p><p>账号：姓名小写拼音</p><p>密码：123456</p><p>效果：</p><p><img src="/../image/%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%AE%B9/6.png" alt="6"></p>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> k8s </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s部署云笔记系统</title>
      <link href="/posts/16330.html"/>
      <url>/posts/16330.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>起因是导师之前让两个研一的学弟学妹写了个前后端的云笔记系统，然后后面让我部署到服务器中，因此记录一下。</p></blockquote><h2 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h2><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 创建namespace</span><br><span class="line">kubectl create namespace note</span><br></pre></td></tr></table></figure><h2 id="1-部署MySQL"><a href="#1-部署MySQL" class="headerlink" title="1. 部署MySQL"></a>1. 部署MySQL</h2><p>创建mysql文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /home/mysql/data</span><br></pre></td></tr></table></figure><h3 id="1-1-挂载数据卷"><a href="#1-1-挂载数据卷" class="headerlink" title="1.1 挂载数据卷"></a>1.1 挂载数据卷</h3><p>note-mysql-pvc.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line"><span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">/home/mysql/data</span> <span class="comment"># 主机上的数据存储路径</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line"><span class="attr">requests:</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">volumeName:</span> <span class="string">note-mysql-pv</span></span><br></pre></td></tr></table></figure><p>部署</p><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f note-mysql-pvc.yaml -n note</span><br></pre></td></tr></table></figure><p>查看是否部署成功：</p><p><img src="/../image/k8s%E9%83%A8%E7%BD%B2%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F/1.png" alt="mysql是否部署成功"></p><h3 id="1-2-部署mysql"><a href="#1-2-部署mysql" class="headerlink" title="1.2 部署mysql"></a>1.2 部署mysql</h3><p>note-mysql.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line"><span class="attr">matchLabels:</span></span><br><span class="line">  <span class="attr">app:</span> <span class="string">note-mysql-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">note-mysql-pod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mysql</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lucas-njfu/note_mysql:v1.1.0</span></span><br><span class="line">  <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">  <span class="attr">value:</span> <span class="string">dfa6f1b032ee42ed95d12647225f2ff4</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">  <span class="attr">volumeMounts:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mysql-persistent-storage</span></span><br><span class="line">  <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mysql-persistent-storage</span></span><br><span class="line"><span class="attr">persistentVolumeClaim:</span></span><br><span class="line">  <span class="attr">claimName:</span> <span class="string">note-mysql-pvc</span> <span class="comment"># 使用之前创建的持久卷声明</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mysql-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line"><span class="attr">app:</span> <span class="string">note-mysql-pod</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> <span class="comment"># service类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line"><span class="attr">nodePort:</span> <span class="number">30006</span> <span class="comment"># 指定绑定的node的端口(默认的取值范围是：30000-32767), 如果不指定，会默认分配</span></span><br><span class="line"><span class="attr">targetPort:</span> <span class="number">3306</span></span><br></pre></td></tr></table></figure><p>部署：</p><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f note-mysql.yaml -n note</span><br></pre></td></tr></table></figure><h2 id="2-部署redis"><a href="#2-部署redis" class="headerlink" title="2. 部署redis"></a>2. 部署redis</h2><p>note-redis.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-redis-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">note-redis-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">note-redis-pod</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-redis</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">redis:latest</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REDIS_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">adcc64a4a9b04324914626590fb52a1a</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">6379</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-redis-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">note-redis-pod</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> <span class="comment"># service类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30079</span> <span class="comment"># 指定绑定的node的端口(默认的取值范围是：30000-32767),如果不指定，会默认分配</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><p>部署：</p><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f note-redis.yaml -n note</span><br></pre></td></tr></table></figure><h2 id="3-部署mongodb"><a href="#3-部署mongodb" class="headerlink" title="3. 部署mongodb"></a>3. 部署mongodb</h2><p>创建mongodb文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /home/mongodb/data</span><br></pre></td></tr></table></figure><h3 id="3-1-挂载数据卷"><a href="#3-1-挂载数据卷" class="headerlink" title="3.1 挂载数据卷"></a>3.1 挂载数据卷</h3><p>note-mongodb-pvc.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-pv</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/home/mongodb/data</span> <span class="comment"># 主机上的数据存储路径</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">volumeName:</span> <span class="string">note-mongodb-pv</span></span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f note-mongodb-pvc.yaml -n note</span><br></pre></td></tr></table></figure><p>查看是否装好：</p><p><img src="/../image/k8s%E9%83%A8%E7%BD%B2%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F/2.png" alt="mongodb-pvc"></p><h3 id="3-2-部署"><a href="#3-2-部署" class="headerlink" title="3.2 部署"></a>3.2 部署</h3><p>note-mongodb.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">note-mongodb-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">note-mongodb-pod</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mongodb</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lucas-njfu/note-mongodb:v1.1.0</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">27017</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MONGO_INITDB_ROOT_USERNAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">admin</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MONGO_INITDB_ROOT_PASSWORD</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">5c8b18289f7848e9b0af98e81562649d</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mongodb-persistent-storage</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/data/db</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-mongodb-persistent-storage</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">note-mongodb-pvc</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-mongodb-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">note-mongodb-pod</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> <span class="comment"># service类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30017</span> <span class="comment"># 指定绑定的node的端口(默认的取值范围是：30000-32767),如果不指定，会默认分配</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">27017</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f note-mongodb.yaml -n note</span><br></pre></td></tr></table></figure><p>检查部署情况</p><p><img src="/../image/k8s%E9%83%A8%E7%BD%B2%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F/3.png" alt="mongodb"></p><h2 id="4-部署服务bert-flask"><a href="#4-部署服务bert-flask" class="headerlink" title="4. 部署服务bert_flask"></a>4. 部署服务bert_flask</h2><p>bert_flask.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">bert-flask-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">bert-flask-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">bert-flask-pod</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">bert-flask</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lucas-njfu/bert_flask:v1.3.0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span> <span class="comment"># Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5000</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">bert-flask-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">bert-flask-pod</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> <span class="comment"># service类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">5000</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30050</span> <span class="comment"># 指定绑定的node的端口(默认的取值范围是：30000-32767),如果不指定，会默认分配</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">5000</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f bert_flask.yaml -n note</span><br></pre></td></tr></table></figure><p>检查部署情况<br><img src="/../image/k8s%E9%83%A8%E7%BD%B2%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F/4.png" alt="bert_flask"></p><h2 id="5-部署服务note-cloud"><a href="#5-部署服务note-cloud" class="headerlink" title="5. 部署服务note_cloud"></a>5. 部署服务note_cloud</h2><h3 id="5-1-配置ConfigMap"><a href="#5-1-配置ConfigMap" class="headerlink" title="5.1 配置ConfigMap"></a>5.1 配置ConfigMap</h3><p>   新建application-prod.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/api</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://note-mysql-service:3306/db_note</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">dfa6f1b032ee42ed95d12647225f2ff4</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">note-redis-service</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">adcc64a4a9b04324914626590fb52a1a</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">time-between-eviction-runs:</span> <span class="string">10s</span></span><br><span class="line">    <span class="attr">jackson:</span></span><br><span class="line">      <span class="attr">default-property-inclusion:</span> <span class="string">non_null</span> <span class="comment"># JSON处理时忽略非空字段</span></span><br><span class="line">  <span class="attr">data:</span></span><br><span class="line">    <span class="attr">mongodb:</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">mongodb://note-user:c88c1b8c2ed94010-8372efbc0879bdcb@note-mongodb-service:27017/mongodb_note</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">10MB</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">10MB</span></span><br><span class="line"><span class="attr">jwt:</span></span><br><span class="line">  <span class="attr">base64-encoded-secret-key:</span> <span class="string">lab_of_njust_cloud_computing</span> <span class="comment"># jwt的签名密码</span></span><br><span class="line"><span class="attr">bert-base-chinese-service:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">bert-flask-service</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5000</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create configmap note-cloud-config -n note --fromfile=application-prod.yml</span><br></pre></td></tr></table></figure><p>   查看部署状态<br>   <img src="/../image/k8s%E9%83%A8%E7%BD%B2%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F/4.png" alt="部署效果"></p><h3 id="5-2-部署服务"><a href="#5-2-部署服务" class="headerlink" title="5.2 部署服务"></a>5.2 部署服务</h3><p>note-cloud.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-cloud-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">note-cloud-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">note-cloud-pod</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-cloud</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lucas-njfu/note_cloud:v1.3.0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span> <span class="comment"># Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/app/config</span> <span class="comment"># 配置文件将挂载到容器的/app/config目录</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">note-cloud-config</span> <span class="comment"># 引用之前创建的 ConfigMap</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-cloud-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">note-cloud-pod</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> <span class="comment"># service类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30080</span> <span class="comment"># 指定绑定的node的端口(默认的取值范围是：30000-32767),如果不指定，会默认分配</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f note-cloud.yaml -n note</span><br></pre></td></tr></table></figure><p>查看日志</p><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n note</span><br><span class="line">kubectl logs -f note-cloud-deployment-6687c5cb49-vc7kl -n note</span><br></pre></td></tr></table></figure><h2 id="6-部署前端"><a href="#6-部署前端" class="headerlink" title="6. 部署前端"></a>6. 部署前端</h2><p>note-nginx.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-nginx-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">note-nginx-pod</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">note-nginx-pod</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">note-nginx</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/lucas-njfu/note-nginx:v2.2.0</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">note-nginx-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">note-nginx-pod</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span> <span class="comment"># service类型</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30088</span> <span class="comment"># 指定绑定的node的端口(默认的取值范围是：30000-32767),如果不指定，会默认分配</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>helm</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f note-nginx.yaml -n note</span><br></pre></td></tr></table></figure><h2 id="最终部署pod查看"><a href="#最终部署pod查看" class="headerlink" title="最终部署pod查看"></a>最终部署pod查看</h2><p><img src="/../image/k8s%E9%83%A8%E7%BD%B2%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F/5.png" alt="pod"></p><p>访问（连校园网，关梯子）：</p><p><a href="http://192.10.84.209:33395/cloudNote/">http://192.10.84.209:33395/cloudNote/</a><br>账号：姓名小写拼音<br>密码：123456</p><p>最终效果：<br><img src="/../image/k8s%E9%83%A8%E7%BD%B2%E4%BA%91%E7%AC%94%E8%AE%B0%E7%B3%BB%E7%BB%9F/6.png" alt="6"></p>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> k8s </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
